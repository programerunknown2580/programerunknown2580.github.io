{"version":3,"file":"scramjet.client.js","sources":["webpack://@mercuryworkshop/scramjet/./src/client/client.ts","webpack://@mercuryworkshop/scramjet/./src/client/document.ts","webpack://@mercuryworkshop/scramjet/./src/client/dom/cookie.ts","webpack://@mercuryworkshop/scramjet/./src/client/dom/css.ts","webpack://@mercuryworkshop/scramjet/./src/client/dom/element.ts","webpack://@mercuryworkshop/scramjet/./src/client/dom/fontface.ts","webpack://@mercuryworkshop/scramjet/./src/client/dom/history.ts","webpack://@mercuryworkshop/scramjet/./src/client/dom/navigation.ts","webpack://@mercuryworkshop/scramjet/./src/client/dom/open.ts","webpack://@mercuryworkshop/scramjet/./src/client/dom/origin.ts","webpack://@mercuryworkshop/scramjet/./src/client/dom/performance.ts","webpack://@mercuryworkshop/scramjet/./src/client/dom/serviceworker.ts","webpack://@mercuryworkshop/scramjet/./src/client/dom/storage.ts","webpack://@mercuryworkshop/scramjet/./src/client/dom/trustedTypes.ts","webpack://@mercuryworkshop/scramjet/./src/client/events.ts","webpack://@mercuryworkshop/scramjet/./src/client/global.ts","webpack://@mercuryworkshop/scramjet/./src/client/helpers.ts","webpack://@mercuryworkshop/scramjet/./src/client/index.ts","webpack://@mercuryworkshop/scramjet/./src/client/location.ts","webpack://@mercuryworkshop/scramjet/./src/client/natives.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/console.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/err.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/error.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/eval.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/event.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/function.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/import.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/indexeddb.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/postmessage.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/realm.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/requests/beacon.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/requests/fetch.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/requests/websocket.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/requests/xmlhttprequest.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/sourcemaps.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/unproxy.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/worker.ts","webpack://@mercuryworkshop/scramjet/./src/client/shared/wrap.ts","webpack://@mercuryworkshop/scramjet/./src/client/swruntime.ts","webpack://@mercuryworkshop/scramjet/./src/client/worker/importScripts.ts","webpack://@mercuryworkshop/scramjet/./src/log.ts","webpack://@mercuryworkshop/scramjet/./src/shared.ts","webpack://@mercuryworkshop/scramjet/./src/shared/rewriters/js.ts","webpack://@mercuryworkshop/scramjet/./src/shared/rewriters/url.ts","webpack://@mercuryworkshop/scramjet/./src/symbols.ts","webpack://@mercuryworkshop/scramjet/./rewriter/out/rewriter.js"],"sourcesContent":["import { iswindow } from \".\";\nimport { ScramjetFrame } from \"../controller/frame\";\nimport { SCRAMJETCLIENT, SCRAMJETFRAME } from \"../symbols\";\nimport { createDocumentProxy } from \"./document\";\nimport { createGlobalProxy } from \"./global\";\nimport { getOwnPropertyDescriptorHandler } from \"./helpers\";\nimport { createLocationProxy } from \"./location\";\nimport { nativeGetOwnPropertyDescriptor } from \"./natives\";\nimport {\n\tBareClient,\n\tCookieStore,\n\tconfig,\n\tdecodeUrl,\n\tencodeUrl,\n} from \"../shared\";\nimport type BareClientType from \"@mercuryworkshop/bare-mux\";\nimport { createWrapFn } from \"./shared/wrap\";\nimport { NavigateEvent } from \"./events\";\nimport type { URLMeta } from \"../shared/rewriters/url\";\n\ndeclare global {\n\tinterface Window {\n\t\t$s: any;\n\t\t$tryset: any;\n\t\t$sImport: any;\n\t}\n}\n\n//eslint-disable-next-line\nexport type AnyFunction = Function;\n\nexport type ProxyCtx = {\n\tfn: AnyFunction;\n\tthis: any;\n\targs: any[];\n\tnewTarget: AnyFunction;\n\treturn: (r: any) => void;\n\tcall: () => any;\n};\nexport type Proxy = {\n\tconstruct?(ctx: ProxyCtx): any;\n\tapply?(ctx: ProxyCtx): any;\n};\n\nexport type TrapCtx<T> = {\n\tthis: any;\n\tget: () => T;\n\tset: (v: T) => void;\n};\nexport type Trap<T> = {\n\twritable?: boolean;\n\tvalue?: any;\n\tenumerable?: boolean;\n\tconfigurable?: boolean;\n\tget?: (ctx: TrapCtx<T>) => T;\n\tset?: (ctx: TrapCtx<T>, v: T) => void;\n};\n\nexport class ScramjetClient {\n\tdocumentProxy: any;\n\tglobalProxy: any;\n\tlocationProxy: any;\n\tserviceWorker: ServiceWorkerContainer;\n\tbare: BareClientType;\n\n\tdescriptors: Record<string, PropertyDescriptor> = {};\n\tnatives: Record<string, any> = {};\n\twrapfn: (i: any, ...args: any) => any;\n\n\tcookieStore = new CookieStore();\n\n\teventcallbacks: Map<\n\t\tany,\n\t\t[\n\t\t\t{\n\t\t\t\tevent: string;\n\t\t\t\toriginalCallback: AnyFunction;\n\t\t\t\tproxiedCallback: AnyFunction;\n\t\t\t},\n\t\t]\n\t> = new Map();\n\n\tmeta: URLMeta;\n\n\tconstructor(public global: typeof globalThis) {\n\t\tthis.serviceWorker = this.global.navigator.serviceWorker;\n\n\t\tif (iswindow) {\n\t\t\tthis.documentProxy = createDocumentProxy(this, global);\n\n\t\t\tglobal.document[SCRAMJETCLIENT] = this;\n\t\t}\n\n\t\tthis.locationProxy = createLocationProxy(this, global);\n\t\tthis.globalProxy = createGlobalProxy(this, global);\n\t\tthis.wrapfn = createWrapFn(this, global);\n\t\tif (iswindow) {\n\t\t\tthis.bare = new BareClient();\n\t\t} else {\n\t\t\tthis.bare = new BareClient(\n\t\t\t\tnew Promise((resolve) => {\n\t\t\t\t\taddEventListener(\"message\", ({ data }) => {\n\t\t\t\t\t\tif (typeof data !== \"object\") return;\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\"$scramjet$type\" in data &&\n\t\t\t\t\t\t\tdata.$scramjet$type === \"baremuxinit\"\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tresolve(data.port);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t);\n\t\t}\n\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst client = this;\n\t\tthis.meta = {\n\t\t\tget origin() {\n\t\t\t\treturn client.url;\n\t\t\t},\n\t\t\tget base() {\n\t\t\t\tif (iswindow) {\n\t\t\t\t\tconst base = client.global.document.querySelector(\"base\");\n\t\t\t\t\tif (base) {\n\t\t\t\t\t\tlet url = base.getAttribute(\"href\");\n\t\t\t\t\t\tconst frag = url.indexOf(\"#\");\n\t\t\t\t\t\turl = url.substring(0, frag === -1 ? undefined : frag);\n\t\t\t\t\t\tif (!url) return client.url;\n\n\t\t\t\t\t\treturn new URL(url, client.url.origin);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn client.url;\n\t\t\t},\n\t\t};\n\n\t\tglobal[SCRAMJETCLIENT] = this;\n\t}\n\n\tget frame(): ScramjetFrame | null {\n\t\tif (!iswindow) return null;\n\t\tconst frame = this.global.window.frameElement;\n\n\t\tif (!frame) return null; // we're top level\n\t\tconst sframe = frame[SCRAMJETFRAME];\n\n\t\tif (!sframe) return null; // we're a subframe. TODO handle propagation but not now\n\n\t\treturn sframe;\n\t}\n\n\tloadcookies(cookiestr: string) {\n\t\tthis.cookieStore.load(cookiestr);\n\t}\n\n\thook() {\n\t\t// @ts-ignore\n\t\tconst context = import.meta.webpackContext(\".\", {\n\t\t\trecursive: true,\n\t\t});\n\n\t\tconst modules = [];\n\n\t\tfor (const key of context.keys()) {\n\t\t\tconst module = context(key);\n\t\t\tif (!key.endsWith(\".ts\")) continue;\n\t\t\tif (\n\t\t\t\t(key.startsWith(\"./dom/\") && \"window\" in self) ||\n\t\t\t\t(key.startsWith(\"./worker/\") && \"WorkerGlobalScope\" in self) ||\n\t\t\t\tkey.startsWith(\"./shared/\")\n\t\t\t) {\n\t\t\t\tmodules.push(module);\n\t\t\t}\n\t\t}\n\n\t\tmodules.sort((a, b) => {\n\t\t\tconst aorder = a.order || 0;\n\t\t\tconst border = b.order || 0;\n\n\t\t\treturn aorder - border;\n\t\t});\n\n\t\tfor (const module of modules) {\n\t\t\tif (!module.enabled || module.enabled())\n\t\t\t\tmodule.default(this, this.global);\n\t\t\telse if (module.disabled) module.disabled(this, this.global);\n\t\t}\n\t}\n\n\tget url(): URL {\n\t\treturn new URL(decodeUrl(self.location.href));\n\t}\n\n\tset url(url: URL | string) {\n\t\tif (url instanceof URL) url = url.toString();\n\n\t\tconst ev = new NavigateEvent(url);\n\t\tif (this.frame) {\n\t\t\tthis.frame.dispatchEvent(ev);\n\t\t}\n\t\tif (ev.defaultPrevented) return;\n\n\t\tself.location.href = encodeUrl(ev.url, this.meta);\n\t}\n\n\t// below are the utilities for proxying and trapping dom APIs\n\t// you don't have to understand this it just makes the rest easier\n\t// i'll document it eventually\n\n\tProxy(name: string | string[], handler: Proxy) {\n\t\tif (Array.isArray(name)) {\n\t\t\tfor (const n of name) {\n\t\t\t\tthis.Proxy(n, handler);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst split = name.split(\".\");\n\t\tconst prop = split.pop();\n\t\tconst target = split.reduce((a, b) => a?.[b], this.global);\n\t\tconst original = Reflect.get(target, prop);\n\t\tthis.natives[name] = original;\n\n\t\tthis.RawProxy(target, prop, handler);\n\t}\n\tRawProxy(target: any, prop: string, handler: Proxy) {\n\t\tif (!target) return;\n\t\tif (!prop) return;\n\t\tif (!Reflect.has(target, prop)) return;\n\n\t\tconst value = Reflect.get(target, prop);\n\t\tdelete target[prop];\n\n\t\tconst h: ProxyHandler<any> = {};\n\n\t\tif (handler.construct) {\n\t\t\th.construct = function (\n\t\t\t\tconstructor: any,\n\t\t\t\targArray: any[],\n\t\t\t\tnewTarget: AnyFunction\n\t\t\t) {\n\t\t\t\tlet returnValue: any = undefined;\n\t\t\t\tlet earlyreturn = false;\n\n\t\t\t\tconst ctx: ProxyCtx = {\n\t\t\t\t\tfn: constructor,\n\t\t\t\t\tthis: null,\n\t\t\t\t\targs: argArray,\n\t\t\t\t\tnewTarget: newTarget,\n\t\t\t\t\treturn: (r: any) => {\n\t\t\t\t\t\tearlyreturn = true;\n\t\t\t\t\t\treturnValue = r;\n\t\t\t\t\t},\n\t\t\t\t\tcall: () => {\n\t\t\t\t\t\tearlyreturn = true;\n\t\t\t\t\t\treturnValue = Reflect.construct(ctx.fn, ctx.args, ctx.newTarget);\n\n\t\t\t\t\t\treturn returnValue;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\thandler.construct(ctx);\n\n\t\t\t\tif (earlyreturn) {\n\t\t\t\t\treturn returnValue;\n\t\t\t\t}\n\n\t\t\t\treturn Reflect.construct(ctx.fn, ctx.args, ctx.newTarget);\n\t\t\t};\n\t\t}\n\n\t\tif (handler.apply) {\n\t\t\th.apply = function (fn: any, thisArg: any, argArray: any[]) {\n\t\t\t\tlet returnValue: any = undefined;\n\t\t\t\tlet earlyreturn = false;\n\n\t\t\t\tconst ctx: ProxyCtx = {\n\t\t\t\t\tfn,\n\t\t\t\t\tthis: thisArg,\n\t\t\t\t\targs: argArray,\n\t\t\t\t\tnewTarget: null,\n\t\t\t\t\treturn: (r: any) => {\n\t\t\t\t\t\tearlyreturn = true;\n\t\t\t\t\t\treturnValue = r;\n\t\t\t\t\t},\n\t\t\t\t\tcall: () => {\n\t\t\t\t\t\tearlyreturn = true;\n\t\t\t\t\t\treturnValue = Reflect.apply(ctx.fn, ctx.this, ctx.args);\n\n\t\t\t\t\t\treturn returnValue;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst pst = Error.prepareStackTrace;\n\n\t\t\t\tError.prepareStackTrace = function (err, s) {\n\t\t\t\t\tif (\n\t\t\t\t\t\ts[0].getFileName() &&\n\t\t\t\t\t\t!s[0].getFileName().startsWith(location.origin + config.prefix)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn { stack: err.stack };\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\ttry {\n\t\t\t\t\thandler.apply(ctx);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tif (err instanceof Error) {\n\t\t\t\t\t\tif ((err.stack as any) instanceof Object) {\n\t\t\t\t\t\t\t//@ts-expect-error i'm not going to explain this\n\t\t\t\t\t\t\terr.stack = err.stack.stack;\n\t\t\t\t\t\t\tconsole.error(\"ERROR FROM SCRMAJET INTERNALS\", err);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow err;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tError.prepareStackTrace = pst;\n\n\t\t\t\tif (earlyreturn) {\n\t\t\t\t\treturn returnValue;\n\t\t\t\t}\n\n\t\t\t\treturn Reflect.apply(ctx.fn, ctx.this, ctx.args);\n\t\t\t};\n\t\t}\n\n\t\th.getOwnPropertyDescriptor = getOwnPropertyDescriptorHandler;\n\t\ttarget[prop] = new Proxy(value, h);\n\t}\n\tTrap<T>(name: string | string[], descriptor: Trap<T>): PropertyDescriptor {\n\t\tif (Array.isArray(name)) {\n\t\t\tfor (const n of name) {\n\t\t\t\tthis.Trap(n, descriptor);\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tconst split = name.split(\".\");\n\t\tconst prop = split.pop();\n\t\tconst target = split.reduce((a, b) => a?.[b], this.global);\n\n\t\tconst original = nativeGetOwnPropertyDescriptor(target, prop);\n\t\tthis.descriptors[name] = original;\n\n\t\treturn this.RawTrap(target, prop, descriptor);\n\t}\n\tRawTrap<T>(\n\t\ttarget: any,\n\t\tprop: string,\n\t\tdescriptor: Trap<T>\n\t): PropertyDescriptor {\n\t\tif (!target) return;\n\t\tif (!prop) return;\n\t\tif (!Reflect.has(target, prop)) return;\n\n\t\tconst oldDescriptor = nativeGetOwnPropertyDescriptor(target, prop);\n\n\t\tconst ctx: TrapCtx<T> = {\n\t\t\tthis: null,\n\t\t\tget: function () {\n\t\t\t\treturn oldDescriptor && oldDescriptor.get.call(this.this);\n\t\t\t},\n\t\t\tset: function (v: T) {\n\t\t\t\toldDescriptor && oldDescriptor.set.call(this.this, v);\n\t\t\t},\n\t\t};\n\n\t\tdelete target[prop];\n\n\t\tconst desc: PropertyDescriptor = {};\n\n\t\tif (descriptor.get) {\n\t\t\tdesc.get = function () {\n\t\t\t\tctx.this = this;\n\n\t\t\t\treturn descriptor.get(ctx);\n\t\t\t};\n\t\t} else if (oldDescriptor?.get) {\n\t\t\tdesc.get = oldDescriptor.get;\n\t\t}\n\n\t\tif (descriptor.set) {\n\t\t\tdesc.set = function (v: T) {\n\t\t\t\tctx.this = this;\n\n\t\t\t\tdescriptor.set(ctx, v);\n\t\t\t};\n\t\t} else if (oldDescriptor?.set) {\n\t\t\tdesc.set = oldDescriptor.set;\n\t\t}\n\n\t\tif (descriptor.enumerable) desc.enumerable = descriptor.enumerable;\n\t\telse if (oldDescriptor?.enumerable)\n\t\t\tdesc.enumerable = oldDescriptor.enumerable;\n\t\tif (descriptor.configurable) desc.configurable = descriptor.configurable;\n\t\telse if (oldDescriptor?.configurable)\n\t\t\tdesc.configurable = oldDescriptor.configurable;\n\n\t\tObject.defineProperty(target, prop, desc);\n\n\t\treturn oldDescriptor;\n\t}\n}\n","import { encodeUrl } from \"../shared/rewriters/url\";\nimport { ScramjetClient } from \"./client\";\nimport { getOwnPropertyDescriptorHandler } from \"./helpers\";\n\nexport function createDocumentProxy(\n\tclient: ScramjetClient,\n\tself: typeof globalThis\n) {\n\treturn new Proxy(self.document, {\n\t\tget(target, prop) {\n\t\t\tif (prop === \"location\") {\n\t\t\t\treturn client.locationProxy;\n\t\t\t}\n\n\t\t\tif (prop === \"defaultView\") {\n\t\t\t\treturn client.globalProxy;\n\t\t\t}\n\n\t\t\tconst value = Reflect.get(target, prop);\n\n\t\t\treturn value;\n\t\t},\n\t\tset(target, prop, newValue) {\n\t\t\tif (prop === \"location\") {\n\t\t\t\tlocation.href = encodeUrl(newValue, client.meta);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn Reflect.set(target, prop, newValue);\n\t\t},\n\t\tgetOwnPropertyDescriptor: getOwnPropertyDescriptorHandler,\n\t});\n}\n","import { ScramjetClient } from \"../client\";\n\nexport default function (client: ScramjetClient, self: typeof window) {\n\tclient.serviceWorker.addEventListener(\"message\", ({ data }) => {\n\t\tif (!(\"scramjet$type\" in data)) return;\n\n\t\tif (data.scramjet$type === \"cookie\") {\n\t\t\tclient.cookieStore.setCookies([data.cookie], new URL(data.url));\n\t\t}\n\t});\n\n\tclient.Trap(\"Document.prototype.cookie\", {\n\t\tget() {\n\t\t\treturn client.cookieStore.getCookies(client.url, true);\n\t\t},\n\t\tset(ctx, value: string) {\n\t\t\tclient.cookieStore.setCookies([value], client.url);\n\n\t\t\tif (client.serviceWorker.controller) {\n\t\t\t\tclient.serviceWorker.controller!.postMessage({\n\t\t\t\t\tscramjet$type: \"cookie\",\n\t\t\t\t\tcookie: value,\n\t\t\t\t\turl: client.url.href,\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t});\n\n\t// @ts-ignore\n\tdelete self.cookieStore;\n}\n","import { ScramjetClient } from \"../client\";\nimport { rewriteCss, unrewriteCss } from \"../../shared\";\n\nconst cssProperties = [\n\t\"background\",\n\t\"background-image\",\n\t\"mask\",\n\t\"mask-image\",\n\t\"list-style\",\n\t\"list-style-image\",\n\t\"border-image\",\n\t\"border-image-source\",\n\t\"cursor\",\n];\n// const jsProperties = [\"background\", \"backgroundImage\", \"mask\", \"maskImage\", \"listStyle\", \"listStyleImage\", \"borderImage\", \"borderImageSource\", \"cursor\"];\n\nexport default function (client: ScramjetClient) {\n\tclient.Proxy(\"CSSStyleDeclaration.prototype.setProperty\", {\n\t\tapply(ctx) {\n\t\t\tif (cssProperties.includes(ctx.args[0]))\n\t\t\t\tctx.args[1] = rewriteCss(ctx.args[1], client.meta);\n\t\t},\n\t});\n\n\tclient.Proxy(\"CSSStyleDeclaration.prototype.getPropertyValue\", {\n\t\tapply(ctx) {\n\t\t\tif (cssProperties.includes(ctx.args[0])) {\n\t\t\t\tconst realProperty = ctx.call();\n\n\t\t\t\treturn ctx.return(unrewriteCss(realProperty));\n\t\t\t}\n\t\t},\n\t});\n\n\tclient.Trap(\"CSSStyleDeclaration.prototype.cssText\", {\n\t\tset(ctx, value: string) {\n\t\t\tctx.set(rewriteCss(value, client.meta));\n\t\t},\n\t\tget(ctx) {\n\t\t\treturn unrewriteCss(ctx.get());\n\t\t},\n\t});\n}\n","import { SCRAMJETCLIENT } from \"../../symbols\";\nimport { ScramjetClient } from \"../client\";\nimport { nativeGetOwnPropertyDescriptor } from \"../natives\";\nimport { decodeUrl, htmlRules, unrewriteHtml } from \"../../shared\";\nimport {\n\tencodeUrl,\n\trewriteCss,\n\trewriteHtml,\n\trewriteJs,\n\trewriteSrcset,\n} from \"../../shared\";\nimport type { URLMeta } from \"../../shared/rewriters/url\";\n\nexport default function (client: ScramjetClient, self: typeof window) {\n\tconst attrObject = {\n\t\tnonce: [self.HTMLElement],\n\t\tintegrity: [self.HTMLScriptElement, self.HTMLLinkElement],\n\t\tcsp: [self.HTMLIFrameElement],\n\t\tsrc: [\n\t\t\tself.HTMLImageElement,\n\t\t\tself.HTMLMediaElement,\n\t\t\tself.HTMLIFrameElement,\n\t\t\tself.HTMLEmbedElement,\n\t\t\tself.HTMLScriptElement,\n\t\t\tself.HTMLSourceElement,\n\t\t],\n\t\thref: [self.HTMLAnchorElement, self.HTMLLinkElement],\n\t\tdata: [self.HTMLObjectElement],\n\t\taction: [self.HTMLFormElement],\n\t\tformaction: [self.HTMLButtonElement, self.HTMLInputElement],\n\t\tsrcdoc: [self.HTMLIFrameElement],\n\t\tsrcset: [self.HTMLImageElement, self.HTMLSourceElement],\n\t\timagesrcset: [self.HTMLLinkElement],\n\t};\n\n\tconst urlinterfaces = [\n\t\tself.HTMLAnchorElement.prototype,\n\t\tself.HTMLAreaElement.prototype,\n\t];\n\tconst originalhrefs = [\n\t\tnativeGetOwnPropertyDescriptor(self.HTMLAnchorElement.prototype, \"href\"),\n\t\tnativeGetOwnPropertyDescriptor(self.HTMLAreaElement.prototype, \"href\"),\n\t];\n\n\tconst attrs = Object.keys(attrObject);\n\n\tfor (const attr of attrs) {\n\t\tfor (const element of attrObject[attr]) {\n\t\t\tconst descriptor = nativeGetOwnPropertyDescriptor(\n\t\t\t\telement.prototype,\n\t\t\t\tattr,\n\t\t\t);\n\t\t\tObject.defineProperty(element.prototype, attr, {\n\t\t\t\tget() {\n\t\t\t\t\tif ([\"src\", \"data\", \"href\", \"action\", \"formaction\"].includes(attr)) {\n\t\t\t\t\t\treturn decodeUrl(descriptor.get.call(this));\n\t\t\t\t\t}\n\n\t\t\t\t\treturn descriptor.get.call(this);\n\t\t\t\t},\n\n\t\t\t\tset(value) {\n\t\t\t\t\tif ([\"nonce\", \"integrity\", \"csp\"].includes(attr)) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t[\"src\", \"data\", \"href\", \"action\", \"formaction\"].includes(attr)\n\t\t\t\t\t) {\n\t\t\t\t\t\tvalue = encodeUrl(value, client.meta);\n\t\t\t\t\t} else if (attr === \"srcdoc\") {\n\t\t\t\t\t\tvalue = rewriteHtml(\n\t\t\t\t\t\t\tvalue,\n\t\t\t\t\t\t\tclient.cookieStore,\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t// srcdoc preserves parent origin i think\n\t\t\t\t\t\t\t\tbase: new URL(client.url.origin),\n\t\t\t\t\t\t\t\torigin: new URL(client.url.origin),\n\t\t\t\t\t\t\t} as URLMeta,\n\t\t\t\t\t\t\ttrue,\n\t\t\t\t\t\t);\n\t\t\t\t\t} else if ([\"srcset\", \"imagesrcset\"].includes(attr)) {\n\t\t\t\t\t\tvalue = rewriteSrcset(value, client.meta);\n\t\t\t\t\t}\n\n\t\t\t\t\tdescriptor.set.call(this, value);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\t// note that href is not here\n\tconst urlprops = [\n\t\t\"protocol\",\n\t\t\"hash\",\n\t\t\"host\",\n\t\t\"hostname\",\n\t\t\"origin\",\n\t\t\"pathname\",\n\t\t\"port\",\n\t\t\"search\",\n\t];\n\tfor (const prop of urlprops) {\n\t\tfor (const i in urlinterfaces) {\n\t\t\tconst target = urlinterfaces[i];\n\t\t\tconst desc = originalhrefs[i];\n\t\t\tclient.RawTrap(target, prop, {\n\t\t\t\tget(ctx) {\n\t\t\t\t\tconst href = desc.get.call(ctx.this);\n\t\t\t\t\tif (!href) return href;\n\n\t\t\t\t\tconst url = new URL(decodeUrl(href));\n\n\t\t\t\t\treturn url[prop];\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\tclient.Trap(\"Node.prototype.baseURI\", {\n\t\tget() {\n\t\t\t// TODO this should be using ownerdocument but who gaf\n\t\t\tconst base = self.document.querySelector(\"base\");\n\t\t\tif (base) {\n\t\t\t\treturn new URL(base.href, client.url.origin).href;\n\t\t\t}\n\n\t\t\treturn client.url.origin;\n\t\t},\n\t\tset() {\n\t\t\treturn false;\n\t\t},\n\t});\n\n\tclient.Proxy(\"Element.prototype.setAttribute\", {\n\t\tapply(ctx) {\n\t\t\tconst [name, value] = ctx.args;\n\n\t\t\tconst ruleList = htmlRules.find((rule) => {\n\t\t\t\tconst r = rule[name];\n\t\t\t\tif (!r) return false;\n\t\t\t\tif (r === \"*\") return true;\n\t\t\t\tif (typeof r === \"function\") return false; // this can't happen but ts\n\n\t\t\t\treturn r.includes(ctx.this.tagName.toLowerCase());\n\t\t\t});\n\n\t\t\tif (ruleList) {\n\t\t\t\tctx.args[1] = ruleList.fn(value, client.meta, client.cookieStore);\n\t\t\t\tctx.fn.call(ctx.this, `data-scramjet-${ctx.args[0]}`, value);\n\t\t\t}\n\t\t},\n\t});\n\n\tclient.Proxy(\"Element.prototype.getAttribute\", {\n\t\tapply(ctx) {\n\t\t\tconst [name] = ctx.args;\n\n\t\t\tif (ctx.fn.call(ctx.this, `data-scramjet-${name}`)) {\n\t\t\t\tctx.return(ctx.fn.call(ctx.this, `data-scramjet-${name}`));\n\t\t\t}\n\t\t},\n\t});\n\n\tclient.Trap(\"Element.prototype.innerHTML\", {\n\t\tset(ctx, value: string) {\n\t\t\tlet newval;\n\t\t\tif (ctx.this instanceof self.HTMLScriptElement) {\n\t\t\t\tnewval = rewriteJs(value, client.meta);\n\t\t\t} else if (ctx.this instanceof self.HTMLStyleElement) {\n\t\t\t\tnewval = rewriteCss(value, client.meta);\n\t\t\t} else {\n\t\t\t\tnewval = rewriteHtml(value, client.cookieStore, client.meta);\n\t\t\t}\n\n\t\t\tctx.set(newval);\n\t\t},\n\t\tget(ctx) {\n\t\t\tif (ctx.this instanceof self.HTMLScriptElement) {\n\t\t\t\treturn atob(\n\t\t\t\t\tclient.natives[\"Element.prototype.getAttribute\"].call(\n\t\t\t\t\t\tctx.this,\n\t\t\t\t\t\t\"data-scramjet-script-source-src\",\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t\tif (ctx.this instanceof self.HTMLStyleElement) {\n\t\t\t\treturn ctx.get();\n\t\t\t}\n\n\t\t\treturn unrewriteHtml(ctx.get());\n\t\t},\n\t});\n\n\tclient.Trap(\"Element.prototype.outerHTML\", {\n\t\tset(ctx, value: string) {\n\t\t\tctx.set(rewriteHtml(value, client.cookieStore, client.meta));\n\t\t},\n\t\tget(ctx) {\n\t\t\treturn unrewriteHtml(ctx.get());\n\t\t},\n\t});\n\n\tclient.Trap(\"HTMLIFrameElement.prototype.contentWindow\", {\n\t\tget(ctx) {\n\t\t\tconst realwin = ctx.get() as Window;\n\t\t\tif (!realwin) return realwin;\n\n\t\t\tif (SCRAMJETCLIENT in realwin.self) {\n\t\t\t\tif (realwin.location.href.includes(\"accounts.google.com\")) return null; // don't question it\n\n\t\t\t\treturn realwin.self[SCRAMJETCLIENT].globalProxy;\n\t\t\t} else {\n\t\t\t\t// hook the iframe\n\t\t\t\tconst newclient = new ScramjetClient(realwin.self);\n\t\t\t\tnewclient.hook();\n\n\t\t\t\treturn newclient.globalProxy;\n\t\t\t}\n\t\t},\n\t});\n\n\tclient.Trap(\"HTMLIFrameElement.prototype.contentDocument\", {\n\t\tget(ctx) {\n\t\t\tconst contentwindow =\n\t\t\t\tclient.descriptors[\"HTMLIFrameElement.prototype.contentWindow\"].get;\n\t\t\tconst realwin = contentwindow.apply(ctx.this);\n\t\t\tif (!realwin) return realwin;\n\n\t\t\tif (SCRAMJETCLIENT in realwin.self) {\n\t\t\t\treturn realwin.self[SCRAMJETCLIENT].documentProxy;\n\t\t\t} else {\n\t\t\t\tconst newclient = new ScramjetClient(realwin.self);\n\t\t\t\tnewclient.hook();\n\n\t\t\t\treturn newclient.documentProxy;\n\t\t\t}\n\t\t},\n\t});\n\n\tclient.Trap(\"TreeWalker.prototype.currentNode\", {\n\t\tget(ctx) {\n\t\t\treturn ctx.get();\n\t\t},\n\t\tset(ctx, value) {\n\t\t\tif (value == client.documentProxy) {\n\t\t\t\treturn ctx.set(self.document);\n\t\t\t}\n\n\t\t\treturn ctx.set(value);\n\t\t},\n\t});\n\n\tclient.Trap(\"Node.prototype.ownerDocument\", {\n\t\tget(ctx) {\n\t\t\t// return client.documentProxy;\n\t\t\tconst doc = ctx.get() as Document | null;\n\t\t\tif (!doc) return null;\n\n\t\t\tconst scram: ScramjetClient = doc[SCRAMJETCLIENT];\n\t\t\tif (!scram) return doc; // ??\n\n\t\t\treturn scram.documentProxy;\n\t\t},\n\t});\n\n\tclient.Proxy(\"DOMParser.prototype.parseFromString\", {\n\t\tapply(ctx) {\n\t\t\tif (ctx.args[1] === \"text/html\") {\n\t\t\t\tctx.args[0] = rewriteHtml(\n\t\t\t\t\tctx.args[0],\n\t\t\t\t\tclient.cookieStore,\n\t\t\t\t\tclient.meta,\n\t\t\t\t\tfalse,\n\t\t\t\t);\n\t\t\t}\n\t\t},\n\t});\n\n\tclient.Proxy(\"document.write\", {\n\t\tapply(ctx) {\n\t\t\tctx.args[0] = rewriteHtml(\n\t\t\t\tctx.args[0],\n\t\t\t\tclient.cookieStore,\n\t\t\t\tclient.meta,\n\t\t\t\ttrue,\n\t\t\t);\n\t\t},\n\t});\n\n\tclient.Proxy(\"document.writeln\", {\n\t\tapply(ctx) {\n\t\t\tctx.args[0] = rewriteHtml(\n\t\t\t\tctx.args[0],\n\t\t\t\tclient.cookieStore,\n\t\t\t\tclient.meta,\n\t\t\t\tfalse,\n\t\t\t);\n\t\t},\n\t});\n}\n","import { ScramjetClient } from \"../client\";\nimport { decodeUrl, rewriteCss } from \"../../shared\";\n\nexport default function (client: ScramjetClient, self: typeof window) {\n\tclient.Proxy(\"FontFace\", {\n\t\tconstruct(ctx) {\n\t\t\tctx.args[1] = rewriteCss(ctx.args[1], client.meta);\n\t\t},\n\t});\n}\n","import { ScramjetClient } from \"../client\";\nimport { encodeUrl } from \"../../shared\";\nimport { UrlChangeEvent } from \"../events\";\n\nexport default function (client: ScramjetClient, self: typeof globalThis) {\n\tclient.Proxy(\"history.pushState\", {\n\t\tapply(ctx) {\n\t\t\tif (ctx.args[2]) ctx.args[2] = encodeUrl(ctx.args[2], client.meta);\n\t\t\tctx.call();\n\n\t\t\tconst ev = new UrlChangeEvent(client.url.href);\n\t\t\tif (client.frame) client.frame.dispatchEvent(ev);\n\t\t},\n\t});\n\n\tclient.Proxy(\"history.replaceState\", {\n\t\tapply(ctx) {\n\t\t\tif (ctx.args[2]) ctx.args[2] = encodeUrl(ctx.args[2], client.meta);\n\t\t\tctx.call();\n\n\t\t\tconst ev = new UrlChangeEvent(client.url.href);\n\t\t\tif (client.frame) client.frame.dispatchEvent(ev);\n\t\t},\n\t});\n}\n","export default function (client, self: Self) {\n\tdelete self.navigation;\n}\n","import { encodeUrl } from \"../../shared\";\nimport { ScramjetClient } from \"../client\";\nimport { SCRAMJETCLIENT } from \"../../symbols\";\n\nexport default function (client: ScramjetClient) {\n\tclient.Proxy(\"window.open\", {\n\t\tapply(ctx) {\n\t\t\tif (ctx.args[0]) ctx.args[0] = encodeUrl(ctx.args[0], client.meta);\n\n\t\t\tif ([\"_parent\", \"_top\", \"_unfencedTop\"].includes(ctx.args[1]))\n\t\t\t\tctx.args[1] = \"_self\";\n\n\t\t\tconst realwin = ctx.call();\n\n\t\t\tif (!realwin) return ctx.return(realwin);\n\n\t\t\tif (SCRAMJETCLIENT in realwin.self) {\n\t\t\t\treturn ctx.return(realwin.self[SCRAMJETCLIENT].globalProxy.window);\n\t\t\t} else {\n\t\t\t\tconst newclient = new ScramjetClient(realwin.self);\n\t\t\t\t// hook the opened window\n\t\t\t\tnewclient.hook();\n\n\t\t\t\treturn ctx.return(newclient.globalProxy);\n\t\t\t}\n\t\t},\n\t});\n\n\t// opener will refer to the real window if it was opened by window.open\n\tclient.Trap(\"opener\", {\n\t\tget(ctx) {\n\t\t\tconst realwin = ctx.get() as Window;\n\n\t\t\tif (realwin && SCRAMJETCLIENT in realwin.self) {\n\t\t\t\treturn realwin.self[SCRAMJETCLIENT].globalProxy;\n\t\t\t} else {\n\t\t\t\t// the opener has to have been already hooked, so if we reach here then it's a real window\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t},\n\t});\n}\n","import { ScramjetClient } from \"../client\";\nimport { decodeUrl } from \"../../shared\";\n\nexport default function (client: ScramjetClient, self: typeof window) {\n\tclient.Trap(\"origin\", {\n\t\tget() {\n\t\t\t// this isn't right!!\n\t\t\treturn client.url.origin;\n\t\t},\n\t\tset() {\n\t\t\treturn false;\n\t\t},\n\t});\n\n\tclient.Trap(\"document.URL\", {\n\t\tget() {\n\t\t\treturn client.url.href;\n\t\t},\n\t\tset() {\n\t\t\treturn false;\n\t\t},\n\t});\n\n\tclient.Trap(\"document.documentURI\", {\n\t\tget() {\n\t\t\treturn client.url.href;\n\t\t},\n\t\tset() {\n\t\t\treturn false;\n\t\t},\n\t});\n\n\tclient.Trap(\"document.domain\", {\n\t\tget() {\n\t\t\treturn client.url.hostname;\n\t\t},\n\t\tset() {\n\t\t\treturn false;\n\t\t},\n\t});\n}\n","import { decodeUrl } from \"../../shared\";\n\nexport default function (client: ScramjetClient, self: typeof globalThis) {\n\tclient.Trap(\"PerformanceEntry.prototype.name\", {\n\t\tget(ctx) {\n\t\t\treturn decodeUrl(ctx.get());\n\t\t},\n\t});\n}\n","import { config, encodeUrl } from \"../../shared\";\nimport { ScramjetClient } from \"../client\";\nimport { type MessageC2W } from \"../../worker\";\nimport { getOwnPropertyDescriptorHandler } from \"../helpers\";\n\n// we need a late order because we're mangling with addEventListener at a higher level\nexport const order = 2;\n\nexport const enabled = () => config.flags.serviceworkers;\nexport function disabled(client: ScramjetClient, self: Self) {\n\tReflect.deleteProperty(Navigator.prototype, \"serviceWorker\");\n}\n\nexport default function (client: ScramjetClient, self: Self) {\n\tlet registration;\n\n\tclient.Proxy(\"Worklet.prototype.addModule\", {\n\t\tapply(ctx) {\n\t\t\tctx.args[0] = encodeUrl(ctx.args[0], client.meta);\n\t\t},\n\t});\n\n\tclient.Proxy(\"EventTarget.prototype.addEventListener\", {\n\t\tapply(ctx) {\n\t\t\tif (registration === ctx.this) {\n\t\t\t\t// do nothing\n\t\t\t\tctx.return(undefined);\n\t\t\t}\n\t\t},\n\t});\n\n\tclient.Proxy(\"EventTarget.prototype.removeEventListener\", {\n\t\tapply(ctx) {\n\t\t\tif (registration === ctx.this) {\n\t\t\t\t// do nothing\n\t\t\t\tctx.return(undefined);\n\t\t\t}\n\t\t},\n\t});\n\n\tclient.Proxy(\"navigator.serviceWorker.getRegistration\", {\n\t\tapply(ctx) {\n\t\t\tctx.return(new Promise((resolve) => resolve(registration)));\n\t\t},\n\t});\n\n\tclient.Proxy(\"navigator.serviceWorker.getRegistrations\", {\n\t\tapply(ctx) {\n\t\t\tctx.return(new Promise((resolve) => resolve([registration])));\n\t\t},\n\t});\n\n\tclient.Trap(\"navigator.serviceWorker.ready\", {\n\t\tget(ctx) {\n\t\t\tconsole.log(registration);\n\n\t\t\treturn new Promise((resolve) => resolve(registration));\n\t\t},\n\t});\n\n\tclient.Trap(\"navigator.serviceWorker.controller\", {\n\t\tget(ctx) {\n\t\t\treturn registration?.active;\n\t\t},\n\t});\n\n\tclient.Proxy(\"navigator.serviceWorker.register\", {\n\t\tapply(ctx) {\n\t\t\tif (ctx.args[0] instanceof URL) ctx.args[0] = ctx.args[0].href;\n\t\t\tlet url = encodeUrl(ctx.args[0], client.meta) + \"?dest=serviceworker\";\n\t\t\tif (ctx.args[1] && ctx.args[1].type === \"module\") {\n\t\t\t\turl += \"&type=module\";\n\t\t\t}\n\n\t\t\tconst worker = new SharedWorker(url);\n\n\t\t\tconst handle = worker.port;\n\n\t\t\tclient.serviceWorker.controller.postMessage(\n\t\t\t\t{\n\t\t\t\t\tscramjet$type: \"registerServiceWorker\",\n\t\t\t\t\tport: handle,\n\t\t\t\t\torigin: client.url.origin,\n\t\t\t\t} as MessageC2W,\n\t\t\t\t[handle]\n\t\t\t);\n\n\t\t\tconst fakeRegistration = new Proxy(\n\t\t\t\t{\n\t\t\t\t\t__proto__: ServiceWorkerRegistration.prototype,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tget(target, prop) {\n\t\t\t\t\t\tif (prop === \"installing\") {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (prop === \"waiting\") {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (prop === \"active\") {\n\t\t\t\t\t\t\treturn handle;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (prop === \"scope\") {\n\t\t\t\t\t\t\treturn ctx.args[0];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (prop === \"unregister\") {\n\t\t\t\t\t\t\treturn () => {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (prop === \"addEventListener\") {\n\t\t\t\t\t\t\treturn () => {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn Reflect.get(target, prop);\n\t\t\t\t\t},\n\t\t\t\t\tgetOwnPropertyDescriptor: getOwnPropertyDescriptorHandler,\n\t\t\t\t}\n\t\t\t);\n\t\t\tregistration = fakeRegistration;\n\n\t\t\tctx.return(new Promise((resolve) => resolve(fakeRegistration)));\n\t\t},\n\t});\n}\n","import { ScramjetClient } from \"../client\";\n\nexport default function (client: ScramjetClient, self: typeof window) {\n\tconst handler: ProxyHandler<Storage> = {\n\t\tget(target, prop) {\n\t\t\tswitch (prop) {\n\t\t\t\tcase \"getItem\":\n\t\t\t\t\treturn (key: string) => {\n\t\t\t\t\t\treturn target.getItem(client.url.host + \"@\" + key);\n\t\t\t\t\t};\n\n\t\t\t\tcase \"setItem\":\n\t\t\t\t\treturn (key: string, value: string) => {\n\t\t\t\t\t\treturn target.setItem(client.url.host + \"@\" + key, value);\n\t\t\t\t\t};\n\n\t\t\t\tcase \"removeItem\":\n\t\t\t\t\treturn (key: string) => {\n\t\t\t\t\t\treturn target.removeItem(client.url.host + \"@\" + key);\n\t\t\t\t\t};\n\n\t\t\t\tcase \"clear\":\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tfor (const key in Object.keys(target)) {\n\t\t\t\t\t\t\tif (key.startsWith(client.url.host)) {\n\t\t\t\t\t\t\t\ttarget.removeItem(key);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\tcase \"key\":\n\t\t\t\t\treturn (index: number) => {\n\t\t\t\t\t\tconst keys = Object.keys(target).filter((key) =>\n\t\t\t\t\t\t\tkey.startsWith(client.url.host)\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn target.getItem(keys[index]);\n\t\t\t\t\t};\n\n\t\t\t\tcase \"length\":\n\t\t\t\t\treturn Object.keys(target).filter((key) =>\n\t\t\t\t\t\tkey.startsWith(client.url.host)\n\t\t\t\t\t).length;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif (prop in Object.prototype || typeof prop === \"symbol\") {\n\t\t\t\t\t\treturn Reflect.get(target, prop);\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(\"GET\", prop, target == realLocalStorage);\n\n\t\t\t\t\treturn target.getItem(client.url.host + \"@\" + (prop as string));\n\t\t\t}\n\t\t},\n\n\t\tset(target, prop, value) {\n\t\t\tif (target == realLocalStorage)\n\t\t\t\tconsole.log(\"SET\", prop, value, target === realLocalStorage);\n\t\t\ttarget.setItem(client.url.host + \"@\" + (prop as string), value);\n\n\t\t\treturn true;\n\t\t},\n\n\t\townKeys(target) {\n\t\t\treturn Reflect.ownKeys(target)\n\t\t\t\t.filter((f) => typeof f === \"string\" && f.startsWith(client.url.host))\n\t\t\t\t.map((f) => f.substring(client.url.host.length + 1));\n\t\t},\n\n\t\tgetOwnPropertyDescriptor(target, property) {\n\t\t\treturn {\n\t\t\t\tvalue: target.getItem(client.url.host + \"@\" + (property as string)),\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t};\n\t\t},\n\n\t\tdefineProperty(target, property, attributes) {\n\t\t\ttarget.setItem(\n\t\t\t\tclient.url.host + \"@\" + (property as string),\n\t\t\t\tattributes.value\n\t\t\t);\n\n\t\t\treturn true;\n\t\t},\n\t};\n\n\tconst realLocalStorage = self.localStorage;\n\tconst realSessionStorage = self.sessionStorage;\n\n\tconst localStorageProxy = new Proxy(self.localStorage, handler);\n\tconst sessionStorageProxy = new Proxy(self.sessionStorage, handler);\n\n\tdelete self.localStorage;\n\tdelete self.sessionStorage;\n\n\tself.localStorage = localStorageProxy;\n\tself.sessionStorage = sessionStorageProxy;\n}\n","export default function (client, self) {\n\tdelete self.TrustedHTML;\n\tdelete self.TrustedScript;\n\tdelete self.TrustedScriptURL;\n\tdelete self.TrustedTypePolicy;\n\tdelete self.TrustedTypePolicyFactory;\n\tdelete self.trustedTypes;\n}\n","export class NavigateEvent extends Event {\n\tconstructor(public url: string) {\n\t\tsuper(\"navigate\");\n\t}\n}\n\nexport class UrlChangeEvent extends Event {\n\tconstructor(public url: string) {\n\t\tsuper(\"urlchange\");\n\t}\n}\n","// import { encodeUrl } from \"../shared\";\nimport { ScramjetClient } from \"./client\";\nimport { indirectEval } from \"./shared/eval\";\n// import { config } from \"../shared\";\nimport { getOwnPropertyDescriptorHandler } from \"./helpers\";\n\nexport function createGlobalProxy(\n\tclient: ScramjetClient,\n\tself: typeof globalThis\n): typeof globalThis {\n\treturn new Proxy(self, {\n\t\tget(target, prop) {\n\t\t\tif (prop === \"location\") return client.locationProxy;\n\n\t\t\tif (\n\t\t\t\ttypeof prop === \"string\" &&\n\t\t\t\t[\"window\", \"top\", \"self\", \"globalThis\", \"parent\", \"document\"].includes(\n\t\t\t\t\tprop\n\t\t\t\t)\n\t\t\t)\n\t\t\t\treturn client.wrapfn(self[prop]);\n\n\t\t\tif (prop === \"$scramjet\") return;\n\n\t\t\tif (prop === \"eval\") return indirectEval.bind(client);\n\n\t\t\tconst value = Reflect.get(target, prop);\n\n\t\t\treturn value;\n\t\t},\n\n\t\tset(target, prop, value) {\n\t\t\tif (prop === \"location\") {\n\t\t\t\tclient.url = value;\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\treturn Reflect.set(target, prop, value);\n\t\t},\n\t\thas(target, prop) {\n\t\t\tif (prop === \"$scramjet\") return false;\n\n\t\t\treturn Reflect.has(target, prop);\n\t\t},\n\t\townKeys(target) {\n\t\t\treturn Reflect.ownKeys(target).filter((key) => key !== \"$scramjet\");\n\t\t},\n\t\tdefineProperty(target, property, attributes) {\n\t\t\tif (!attributes.get && !attributes.set) {\n\t\t\t\tattributes.writable = true;\n\t\t\t}\n\t\t\tattributes.configurable = true;\n\n\t\t\treturn Reflect.defineProperty(target, property, attributes);\n\t\t},\n\t\tgetOwnPropertyDescriptor: getOwnPropertyDescriptorHandler,\n\t});\n}\n","export function getOwnPropertyDescriptorHandler(target, prop) {\n\tconst realDescriptor = Reflect.getOwnPropertyDescriptor(target, prop);\n\n\treturn realDescriptor;\n\n\tconst d: PropertyDescriptor = {};\n\n\tif (realDescriptor.enumerable !== undefined)\n\t\td.enumerable = realDescriptor.enumerable;\n\tif (realDescriptor.configurable !== undefined)\n\t\td.configurable = realDescriptor.configurable;\n\tif (realDescriptor.writable !== undefined)\n\t\td.writable = realDescriptor.writable;\n\n\tif (realDescriptor.get) {\n\t\td.get = () => this.get(target, prop);\n\t}\n\n\tif (realDescriptor.set) {\n\t\td.set = (value) => this.set(target, prop, value);\n\t}\n\n\tif (realDescriptor.value) {\n\t\td.value = this.get(target, prop);\n\t}\n\n\treturn d;\n}\n","// entrypoint for scramjet.client.js\n\nimport { SCRAMJETCLIENT } from \"../symbols\";\nimport { ScramjetClient } from \"./client\";\nimport { ScramjetServiceWorkerRuntime } from \"./swruntime\";\n\nexport const iswindow = \"window\" in self;\nexport const isworker = \"WorkerGlobalScope\" in self;\nexport const issw = \"ServiceWorkerGlobalScope\" in self;\nexport const isdedicated = \"DedicatedWorkerGlobalScope\" in self;\nexport const isshared = \"SharedWorkerGlobalScope\" in self;\nexport const isemulatedsw =\n\tnew URL(self.location.href).searchParams.get(\"dest\") === \"serviceworker\";\n\ndbg.log(\"scrammin\");\n// if it already exists, that means the handlers have probably already been setup by the parent document\nif (!(SCRAMJETCLIENT in <Partial<typeof self>>self)) {\n\tconst client = new ScramjetClient(self);\n\n\tif (self.COOKIE) client.loadcookies(self.COOKIE);\n\n\tclient.hook();\n\n\tif (isemulatedsw) {\n\t\tconst runtime = new ScramjetServiceWorkerRuntime(client);\n\t\truntime.hook();\n\t}\n}\n\nif (\"document\" in self && document.currentScript) {\n\tdocument.currentScript.remove();\n}\n","// @ts-nocheck\nimport { ScramjetClient } from \"./client\";\nimport { nativeGetOwnPropertyDescriptor } from \"./natives\";\nimport { decodeUrl, encodeUrl } from \"../shared\";\nimport { iswindow } from \".\";\n\nexport function createLocationProxy(\n\tclient: ScramjetClient,\n\tself: typeof globalThis\n) {\n\tconst Location = iswindow ? self.Location : self.WorkerLocation;\n\t// location cannot be Proxy()d\n\tconst fakeLocation = {};\n\tObject.setPrototypeOf(fakeLocation, Location.prototype);\n\tfakeLocation.constructor = Location;\n\n\t// for some reason it's on the object for Location and on the prototype for WorkerLocation??\n\tconst descriptorSource = iswindow ? self.location : Location.prototype;\n\tconst urlprops = [\n\t\t\"protocol\",\n\t\t\"hash\",\n\t\t\"host\",\n\t\t\"hostname\",\n\t\t\"href\",\n\t\t\"origin\",\n\t\t\"pathname\",\n\t\t\"port\",\n\t\t\"search\",\n\t];\n\tfor (const prop of urlprops) {\n\t\tconst native = nativeGetOwnPropertyDescriptor(descriptorSource, prop);\n\t\tif (!native) continue;\n\n\t\tconst desc = {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: true,\n\t\t};\n\t\tif (native.get) {\n\t\t\tdesc.get = new Proxy(native.get, {\n\t\t\t\tapply() {\n\t\t\t\t\treturn client.url[prop];\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tif (native.set) {\n\t\t\tdesc.set = new Proxy(native.set, {\n\t\t\t\tapply(target, thisArg, args) {\n\t\t\t\t\tif (prop === \"href\") {\n\t\t\t\t\t\t// special case\n\t\t\t\t\t\tclient.url = args[0];\n\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst url = new URL(client.url.href);\n\t\t\t\t\turl[prop] = args[0];\n\t\t\t\t\tclient.url = url;\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t\tObject.defineProperty(fakeLocation, prop, desc);\n\t}\n\n\t// functions\n\tfakeLocation.toString = new Proxy(self.location.toString, {\n\t\tapply() {\n\t\t\treturn client.url.href;\n\t\t},\n\t});\n\n\tif (self.location.valueOf)\n\t\tfakeLocation.valueOf = new Proxy(self.location.valueOf, {\n\t\t\tapply() {\n\t\t\t\treturn client.url.href;\n\t\t\t},\n\t\t});\n\tif (self.location.assign)\n\t\tfakeLocation.assign = new Proxy(self.location.assign, {\n\t\t\tapply(target, thisArg, args) {\n\t\t\t\targs[0] = encodeUrl(args[0], client.meta);\n\t\t\t\tReflect.apply(target, self.location, args);\n\t\t\t},\n\t\t});\n\tif (self.location.reload)\n\t\tfakeLocation.reload = new Proxy(self.location.reload, {\n\t\t\tapply(target, thisArg, args) {\n\t\t\t\tReflect.apply(target, self.location, args);\n\t\t\t},\n\t\t});\n\tif (self.location.replace)\n\t\tfakeLocation.replace = new Proxy(self.location.replace, {\n\t\t\tapply(target, thisArg, args) {\n\t\t\t\targs[0] = encodeUrl(args[0], client.meta);\n\t\t\t\tReflect.apply(target, self.location, args);\n\t\t\t},\n\t\t});\n\n\treturn fakeLocation;\n}\n","export const nativeFunction = self.Function;\nexport const nativeGetOwnPropertyDescriptor =\n\tself.Object.getOwnPropertyDescriptor;\n","import { ScramjetClient } from \"../client\";\n\nexport default function (client: ScramjetClient) {\n\tclient.Proxy(\"console.clear\", {\n\t\tapply(ctx) {\n\t\t\t// fuck you\n\t\t\tctx.return(undefined);\n\t\t},\n\t});\n}\n","import { config } from \"../../shared\";\nimport { ScramjetClient } from \"../client\";\n\nexport const enabled = () => config.flags.captureErrors;\nexport function argdbg(arg, recurse = []) {\n\tswitch (typeof arg) {\n\t\tcase \"string\":\n\t\t\tif (arg.includes(\"localhost:1337/scramjet/\") && arg.includes(\"m3u8\"))\n\t\t\t\t// eslint-disable-next-line no-debugger\n\t\t\t\tdebugger;\n\t\t\tbreak;\n\t\tcase \"object\":\n\t\t\t// if (arg instanceof Location) debugger;\n\t\t\tif (\n\t\t\t\targ &&\n\t\t\t\targ[Symbol.iterator] &&\n\t\t\t\ttypeof arg[Symbol.iterator] === \"function\"\n\t\t\t)\n\t\t\t\tfor (const prop in arg) {\n\t\t\t\t\t// make sure it's not a getter\n\t\t\t\t\tconst desc = Object.getOwnPropertyDescriptor(arg, prop);\n\t\t\t\t\tif (desc && desc.get) continue;\n\n\t\t\t\t\tconst ar = arg[prop];\n\t\t\t\t\tif (recurse.includes(ar)) continue;\n\t\t\t\t\trecurse.push(ar);\n\t\t\t\t\targdbg(ar, recurse);\n\t\t\t\t}\n\t\t\tbreak;\n\t}\n}\n\nexport default function (client: ScramjetClient, self: typeof globalThis) {\n\tself.$scramerr = function scramerr(e) {\n\t\tconsole.warn(\"CAUGHT ERROR\", e);\n\t};\n\n\tself.$scramdbg = function scramdbg(args, t) {\n\t\tif (args && typeof args === \"object\" && args.length > 0) argdbg(args);\n\t\targdbg(t);\n\n\t\treturn t;\n\t};\n\n\tclient.Proxy(\"Promise.prototype.catch\", {\n\t\tapply(ctx) {\n\t\t\tctx.args[0] = new Proxy(ctx.args[0], {\n\t\t\t\tapply(target, thisArg, argArray) {\n\t\t\t\t\t// console.warn(\"CAUGHT PROMISE REJECTION\", argArray);\n\t\t\t\t\tReflect.apply(target, thisArg, argArray);\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t});\n}\n","import { decodeUrl } from \"../../shared\";\nimport { ScramjetClient } from \"../client\";\n\nexport const enabled = () => self.$scramjet.config.flags.cleanerrors;\nexport default function (client: ScramjetClient, self: Self) {\n\t// v8 only. all we need to do is clean the scramjet urls from stack traces\n\tError.prepareStackTrace = (error, stack) => {\n\t\tlet newstack = error.stack;\n\n\t\tfor (let i = 0; i < stack.length; i++) {\n\t\t\tconst url = stack[i].getFileName();\n\t\t\ttry {\n\t\t\t\tnewstack = newstack.replaceAll(url, decodeUrl(url));\n\t\t\t} catch {}\n\t\t}\n\n\t\treturn newstack;\n\t};\n}\n","import { ScramjetClient } from \"../client\";\nimport { config, rewriteJs } from \"../../shared\";\n\nexport default function (client: ScramjetClient, self: Self) {\n\t// used for proxying *direct eval*\n\t// eval(\"...\") -> eval($scramjet$rewrite(\"...\"))\n\tObject.defineProperty(self, config.rewritefn, {\n\t\tvalue: function (js: any) {\n\t\t\tif (typeof js !== \"string\") return js;\n\n\t\t\tconst rewritten = rewriteJs(js, client.meta);\n\n\t\t\treturn rewritten;\n\t\t},\n\t\twritable: false,\n\t\tconfigurable: false,\n\t});\n}\n\nexport function indirectEval(this: ScramjetClient, js: any) {\n\t// > If the argument of eval() is not a string, eval() returns the argument unchanged\n\tif (typeof js !== \"string\") return js;\n\n\tconst indirection = this.global.eval;\n\n\treturn indirection(rewriteJs(js, this.meta) as string);\n}\n","import { iswindow } from \"..\";\nimport { SCRAMJETCLIENT } from \"../../symbols\";\nimport { ScramjetClient } from \"../client\";\nimport { getOwnPropertyDescriptorHandler } from \"../helpers\";\nimport { nativeGetOwnPropertyDescriptor } from \"../natives\";\nimport { unproxy } from \"./unproxy\";\n\nconst realOnEvent = Symbol.for(\"scramjet original onevent function\");\n\nexport default function (client: ScramjetClient, self: Self) {\n\tconst handlers = {\n\t\tmessage: {\n\t\t\t_init() {\n\t\t\t\tif (typeof this.data === \"object\" && \"$scramjet$type\" in this.data) {\n\t\t\t\t\t// this is a ctl message\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t},\n\t\t\tports() {\n\t\t\t\t// don't know why i have to do this?\n\t\t\t\treturn this.ports;\n\t\t\t},\n\t\t\tsource() {\n\t\t\t\tif (this.source === null) return null;\n\n\t\t\t\tconst scram: ScramjetClient = this.source[SCRAMJETCLIENT];\n\n\t\t\t\tif (scram) return scram.globalProxy;\n\n\t\t\t\treturn this.source;\n\t\t\t},\n\t\t\torigin() {\n\t\t\t\tif (typeof this.data === \"object\" && \"$scramjet$origin\" in this.data)\n\t\t\t\t\treturn this.data.$scramjet$origin;\n\n\t\t\t\treturn client.url.origin;\n\t\t\t},\n\t\t\tdata() {\n\t\t\t\tif (typeof this.data === \"object\" && \"$scramjet$data\" in this.data)\n\t\t\t\t\treturn this.data.$scramjet$data;\n\n\t\t\t\treturn this.data;\n\t\t\t},\n\t\t},\n\t};\n\n\t// TODO! window.event not proxied\n\n\tfunction wraplistener(listener: (...args: any) => any) {\n\t\treturn new Proxy(listener, {\n\t\t\tapply(target, thisArg, argArray) {\n\t\t\t\tconst realEvent: Event = argArray[0];\n\n\t\t\t\t// we only need to handle events dispatched from the browser\n\t\t\t\tif (realEvent.isTrusted) {\n\t\t\t\t\tconst type = realEvent.type;\n\n\t\t\t\t\tif (type in handlers) {\n\t\t\t\t\t\tconst handler = handlers[type];\n\n\t\t\t\t\t\tif (handler._init) {\n\t\t\t\t\t\t\tif (handler._init.call(realEvent) === false) return;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\targArray[0] = new Proxy(realEvent, {\n\t\t\t\t\t\t\tget(_target, prop, reciever) {\n\t\t\t\t\t\t\t\tif (prop in handler) {\n\t\t\t\t\t\t\t\t\treturn handler[prop].call(_target);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\treturn Reflect.get(target, prop, reciever);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgetOwnPropertyDescriptor: getOwnPropertyDescriptorHandler,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!self.event) {\n\t\t\t\t\tObject.defineProperty(self, \"event\", {\n\t\t\t\t\t\tget() {\n\t\t\t\t\t\t\treturn argArray[0];\n\t\t\t\t\t\t},\n\t\t\t\t\t\tconfigurable: true,\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tconst rv = Reflect.apply(target, thisArg, argArray);\n\n\t\t\t\treturn rv;\n\t\t\t},\n\t\t\tgetOwnPropertyDescriptor: getOwnPropertyDescriptorHandler,\n\t\t});\n\t}\n\n\tclient.Proxy(\"EventTarget.prototype.addEventListener\", {\n\t\tapply(ctx) {\n\t\t\tunproxy(ctx, client);\n\t\t\tif (typeof ctx.args[1] !== \"function\") return;\n\n\t\t\tconst origlistener = ctx.args[1];\n\t\t\tconst proxylistener = wraplistener(origlistener);\n\n\t\t\tctx.args[1] = proxylistener;\n\n\t\t\tlet arr = client.eventcallbacks.get(ctx.this);\n\t\t\tarr ||= [] as any;\n\t\t\tarr.push({\n\t\t\t\tevent: ctx.args[0] as string,\n\t\t\t\toriginalCallback: origlistener,\n\t\t\t\tproxiedCallback: proxylistener,\n\t\t\t});\n\t\t\tclient.eventcallbacks.set(ctx.this, arr);\n\t\t},\n\t});\n\n\tclient.Proxy(\"EventTarget.prototype.removeEventListener\", {\n\t\tapply(ctx) {\n\t\t\tunproxy(ctx, client);\n\t\t\tif (typeof ctx.args[1] !== \"function\") return;\n\n\t\t\tconst arr = client.eventcallbacks.get(ctx.this);\n\t\t\tif (!arr) return;\n\n\t\t\tconst i = arr.findIndex(\n\t\t\t\t(e) => e.event === ctx.args[0] && e.originalCallback === ctx.args[1]\n\t\t\t);\n\t\t\tif (i === -1) return;\n\n\t\t\tconst r = arr.splice(i, 1);\n\t\t\tclient.eventcallbacks.set(ctx.this, arr);\n\n\t\t\tctx.args[1] = r[0].proxiedCallback;\n\t\t},\n\t});\n\n\tclient.Proxy(\"EventTarget.prototype.dispatchEvent\", {\n\t\tapply(ctx) {\n\t\t\tunproxy(ctx, client);\n\t\t},\n\t});\n\n\tif (!iswindow) return;\n\n\tconst targets = [self.window, self.HTMLElement.prototype];\n\n\tfor (const target of targets) {\n\t\tconst keys = Reflect.ownKeys(target);\n\n\t\tfor (const key of keys) {\n\t\t\tif (\n\t\t\t\ttypeof key === \"string\" &&\n\t\t\t\tkey.startsWith(\"on\") &&\n\t\t\t\thandlers[key.slice(2)]\n\t\t\t) {\n\t\t\t\tconst descriptor = nativeGetOwnPropertyDescriptor(target, key);\n\t\t\t\tif (!descriptor.get || !descriptor.set || !descriptor.configurable)\n\t\t\t\t\tcontinue;\n\n\t\t\t\t// these are the `onmessage`, `onclick`, etc. properties\n\t\t\t\tclient.RawTrap(target, key, {\n\t\t\t\t\tget(ctx) {\n\t\t\t\t\t\tif (this[realOnEvent]) return this[realOnEvent];\n\n\t\t\t\t\t\treturn ctx.get();\n\t\t\t\t\t},\n\t\t\t\t\tset(ctx, value: any) {\n\t\t\t\t\t\tthis[realOnEvent] = value;\n\n\t\t\t\t\t\tif (typeof value !== \"function\") return ctx.set(value);\n\n\t\t\t\t\t\tctx.set(wraplistener(value));\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n","import { ScramjetClient, ProxyCtx, Proxy } from \"../client\";\nimport { rewriteJs } from \"../../shared\";\n\nfunction rewriteFunction(ctx: ProxyCtx, client: ScramjetClient) {\n\tconst stringifiedFunction = ctx.call().toString();\n\n\tconst content = rewriteJs(`return ${stringifiedFunction}`, client.meta);\n\tctx.return(ctx.fn(content)());\n}\n\nexport default function (client: ScramjetClient, self: Self) {\n\tconst handler: Proxy = {\n\t\tapply(ctx) {\n\t\t\trewriteFunction(ctx, client);\n\t\t},\n\t\tconstruct(ctx) {\n\t\t\trewriteFunction(ctx, client);\n\t\t},\n\t};\n\n\tclient.Proxy(\"Function\", handler);\n\n\t// god i love javascript\n\tclient.RawProxy(function () {}.constructor.prototype, \"constructor\", handler);\n\tclient.RawProxy(\n\t\tasync function () {}.constructor.prototype,\n\t\t\"constructor\",\n\t\thandler\n\t);\n\tclient.RawProxy(\n\t\tfunction* () {}.constructor.prototype,\n\t\t\"constructor\",\n\t\thandler\n\t);\n\tclient.RawProxy(\n\t\tasync function* () {}.constructor.prototype,\n\t\t\"constructor\",\n\t\thandler\n\t);\n}\n","import { ScramjetClient } from \"../client\";\nimport { config } from \"../../shared\";\nimport { encodeUrl } from \"../../shared/rewriters/url\";\n\nexport default function (client: ScramjetClient, self: Self) {\n\tconst Function = client.natives.Function;\n\n\tself[config.importfn] = function (base: string) {\n\t\treturn function (url: string) {\n\t\t\tconst resolved = new URL(url, base).href;\n\n\t\t\treturn Function(`return import(\"${encodeUrl(resolved, client.meta)}\")`)();\n\t\t};\n\t};\n\n\tself[config.metafn] = function (base: string) {\n\t\treturn {\n\t\t\turl: base,\n\t\t\tresolve: function (url: string) {\n\t\t\t\treturn new URL(url, base).href;\n\t\t\t},\n\t\t};\n\t};\n}\n","import { ScramjetClient } from \"../client\";\n\nexport default function (client: ScramjetClient, self: Self) {\n\tclient.Proxy(\"IDBFactory.prototype.open\", {\n\t\tapply(ctx) {\n\t\t\tctx.args[0] = `${client.url.origin}@${ctx.args[0]}`;\n\t\t},\n\t});\n\n\tclient.Trap(\"IDBDatabase.prototype.name\", {\n\t\tget(ctx) {\n\t\t\tlet name = ctx.get() as string;\n\t\t\treturn name.substring(name.indexOf(\"@\") + 1);\n\t\t},\n\t});\n}\n","import { iswindow } from \"..\";\nimport { SCRAMJETCLIENT } from \"../../symbols\";\nimport { ScramjetClient } from \"../client\";\nimport { POLLUTANT } from \"../shared/realm\";\n\nexport default function (client: ScramjetClient) {\n\tif (iswindow)\n\t\tclient.Proxy(\"window.postMessage\", {\n\t\t\tapply(ctx) {\n\t\t\t\t// so we need to send the real origin here, since the recieving window can't possibly know.\n\t\t\t\t// except, remember that this code is being ran in a different realm than the invoker, so if we ask our `client` it may give us the wrong origin\n\t\t\t\t// if we were given any object that came from the real realm we can use that to get the real origin\n\t\t\t\t// and this works in every case EXCEPT for the fact that all three arguments can be strings which are copied instead of cloned\n\t\t\t\t// so we have to use `$setrealm` which will pollute this with an object from the real realm\n\n\t\t\t\tlet pollutant;\n\n\t\t\t\tif (typeof ctx.args[0] === \"object\" && ctx.args[0] !== null) {\n\t\t\t\t\tpollutant = ctx.args[0]; // try to use the first object we can find because it's more reliable\n\t\t\t\t} else if (typeof ctx.args[2] === \"object\" && ctx.args[2] !== null) {\n\t\t\t\t\tpollutant = ctx.args[2]; // next try to use transfer\n\t\t\t\t} else if (\n\t\t\t\t\tPOLLUTANT in ctx.this &&\n\t\t\t\t\ttypeof ctx.this[POLLUTANT] === \"object\" &&\n\t\t\t\t\tctx.this[POLLUTANT] !== null\n\t\t\t\t) {\n\t\t\t\t\tpollutant = ctx.this[POLLUTANT]; // lastly try to use the object from $setrealm\n\t\t\t\t} else {\n\t\t\t\t\tpollutant = {}; // give up\n\t\t\t\t}\n\n\t\t\t\t// and now we can steal Function from the caller's realm\n\t\t\t\tconst {\n\t\t\t\t\tconstructor: { constructor: Function },\n\t\t\t\t} = pollutant;\n\n\t\t\t\t// invoking stolen function will give us the caller's globalThis, remember scramjet has already proxied it!!!\n\t\t\t\tconst callerGlobalThisProxied: Self = Function(\"return globalThis\")();\n\t\t\t\tconst callerClient = callerGlobalThisProxied[SCRAMJETCLIENT];\n\n\t\t\t\t// this WOULD be enough but the source argument of MessageEvent has to return the caller's window\n\t\t\t\t// and if we just call it normally it would be coming from here, which WILL NOT BE THE CALLER'S because the accessor is from the parent\n\t\t\t\t// so with the stolen function we wrap postmessage so the source will truly be the caller's window (remember that function is scramjet's!!!)\n\t\t\t\tconst wrappedPostMessage = Function(\n\t\t\t\t\t\"data\",\n\t\t\t\t\t\"origin\",\n\t\t\t\t\t\"transfer\",\n\t\t\t\t\t\"this(data, origin, transfer)\"\n\t\t\t\t);\n\n\t\t\t\tctx.args[0] = {\n\t\t\t\t\t$scramjet$messagetype: \"window\",\n\t\t\t\t\t$scramjet$origin: callerClient.url.origin,\n\t\t\t\t\t$scramjet$data: ctx.args[0],\n\t\t\t\t};\n\n\t\t\t\t// * origin because obviously\n\t\t\t\tctx.args[1] = \"*\";\n\n\t\t\t\tctx.return(\n\t\t\t\t\twrappedPostMessage.call(ctx.fn, ctx.args[0], ctx.args[1], ctx.args[2])\n\t\t\t\t);\n\t\t\t},\n\t\t});\n\n\tconst toproxy = [\n\t\t\"Worker.prototype.postMessage\",\n\t\t\"MessagePort.prototype.postMessage\",\n\t];\n\tif (!iswindow) toproxy.push(\"self.postMessage\"); // only do the generic version if we're in a worker\n\n\tclient.Proxy(toproxy, {\n\t\tapply(ctx) {\n\t\t\t// origin/source doesn't need to be preserved - it's null in the message event\n\n\t\t\tctx.args[0] = {\n\t\t\t\t$scramjet$messagetype: \"worker\",\n\t\t\t\t$scramjet$data: ctx.args[0],\n\t\t\t};\n\t\t},\n\t});\n}\n","import { ScramjetClient } from \"../client\";\nimport { config } from \"../../shared\";\n\nexport const POLLUTANT = Symbol.for(\"scramjet realm pollutant\");\n\nexport default function (client: ScramjetClient, self: typeof globalThis) {\n\t// object.$setrealm({}).postMessage(...)\n\t// the empty object is the \"pollutant\" which can reconstruct the real realm\n\t// i explain more in postmessage.ts\n\tObject.defineProperty(self.Object.prototype, config.setrealmfn, {\n\t\tvalue(pollution: {}) {\n\t\t\t// this is bad!! sites could detect this\n\t\t\tObject.defineProperty(this, POLLUTANT, {\n\t\t\t\tvalue: pollution,\n\t\t\t\twritable: false,\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t});\n\n\t\t\treturn this;\n\t\t},\n\t\twritable: true,\n\t\tconfigurable: true,\n\t\tenumerable: false,\n\t});\n}\n","import { encodeUrl } from \"../../../shared/rewriters/url\";\nimport { ScramjetClient } from \"../../client\";\n\nexport default function (client: ScramjetClient, self) {\n\tclient.Proxy(\"navigator.sendBeacon\", {\n\t\tapply(ctx) {\n\t\t\tctx.args[0] = encodeUrl(ctx.args[0], client.meta);\n\t\t},\n\t});\n}\n","// ts throws an error if you dont do window.fetch\n\nimport { isemulatedsw } from \"../..\";\nimport { decodeUrl } from \"../../../shared/rewriters/url\";\nimport { ScramjetClient } from \"../../client\";\nimport { encodeUrl, rewriteHeaders } from \"../../../shared\";\n\nexport default function (client: ScramjetClient, self: typeof globalThis) {\n\tclient.Proxy(\"fetch\", {\n\t\tapply(ctx) {\n\t\t\tif (typeof ctx.args[0] === \"string\" || ctx.args[0] instanceof URL) {\n\t\t\t\tctx.args[0] = encodeUrl(ctx.args[0].toString(), client.meta);\n\n\t\t\t\tif (isemulatedsw) ctx.args[0] += \"?from=swruntime\";\n\t\t\t}\n\t\t},\n\t});\n\n\t// client.Proxy(\"Headers\", {\n\t// \tconstruct(ctx) {\n\t// \t\tctx.args[0] = rewriteHeaders(ctx.args[0]);\n\t// \t},\n\t// });\n\n\tclient.Proxy(\"Request\", {\n\t\tconstruct(ctx) {\n\t\t\tif (typeof ctx.args[0] === \"string\" || ctx.args[0] instanceof URL) {\n\t\t\t\tctx.args[0] = encodeUrl(ctx.args[0].toString(), client.meta);\n\n\t\t\t\tif (isemulatedsw) ctx.args[0] += \"?from=swruntime\";\n\t\t\t}\n\t\t},\n\t});\n\n\tclient.Trap(\"Response.prototype.url\", {\n\t\tget(ctx) {\n\t\t\treturn decodeUrl(ctx.get() as string);\n\t\t},\n\t});\n\n\tclient.Trap(\"Request.prototype.url\", {\n\t\tget(ctx) {\n\t\t\treturn decodeUrl(ctx.get() as string);\n\t\t},\n\t});\n\n\t// client.Proxy(\"Response.redirect\", {\n\t// \tapply(ctx) {\n\t// \t\tctx.args[0] = encodeUrl(ctx.args[0]);\n\t// \t},\n\t// });\n}\n","import { type BareWebSocket } from \"@mercuryworkshop/bare-mux\";\nimport { ScramjetClient } from \"../../client\";\n\ntype FakeWebSocketState = {\n\textensions: string;\n\tprotocol: string;\n\turl: string;\n\tbinaryType: string;\n\tbarews: BareWebSocket;\n\n\tcaptureListeners: Record<string, EventListener[]>;\n\tlisteners: Record<string, EventListener[]>;\n\n\tonclose?: (ev: CloseEvent) => any;\n\tonerror?: (ev: Event) => any;\n\tonmessage?: (ev: MessageEvent) => any;\n\tonopen?: (ev: Event) => any;\n};\nexport default function (client: ScramjetClient, self: typeof globalThis) {\n\tconst socketmap: WeakMap<WebSocket, FakeWebSocketState> = new WeakMap();\n\tclient.Proxy(\"WebSocket\", {\n\t\tconstruct(ctx) {\n\t\t\tconst fakeWebSocket = new EventTarget() as WebSocket;\n\t\t\tObject.setPrototypeOf(fakeWebSocket, self.WebSocket.prototype);\n\t\t\tfakeWebSocket.constructor = ctx.fn;\n\n\t\t\tconst trustEvent = (ev: Event) =>\n\t\t\t\tnew Proxy(ev, {\n\t\t\t\t\tget(target, prop) {\n\t\t\t\t\t\tif (prop === \"isTrusted\") return true;\n\n\t\t\t\t\t\treturn Reflect.get(target, prop);\n\t\t\t\t\t},\n\t\t\t\t});\n\n\t\t\tconst barews = client.bare.createWebSocket(\n\t\t\t\tctx.args[0],\n\t\t\t\tctx.args[1],\n\t\t\t\tnull,\n\t\t\t\t{\n\t\t\t\t\t\"User-Agent\": self.navigator.userAgent,\n\t\t\t\t\tOrigin: client.url.origin,\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst state: FakeWebSocketState = {\n\t\t\t\textensions: \"\",\n\t\t\t\tprotocol: \"\",\n\t\t\t\turl: ctx.args[0],\n\t\t\t\tbinaryType: \"blob\",\n\t\t\t\tbarews,\n\n\t\t\t\tcaptureListeners: {},\n\t\t\t\tlisteners: {},\n\t\t\t};\n\n\t\t\tfunction fakeEventSend(fakeev: Event) {\n\t\t\t\tstate[\"on\" + fakeev.type]?.(trustEvent(fakeev));\n\t\t\t\tfakeWebSocket.dispatchEvent(fakeev);\n\t\t\t}\n\n\t\t\tbarews.addEventListener(\"open\", (ev) => {\n\t\t\t\tfakeEventSend(new Event(\"open\"));\n\t\t\t});\n\t\t\tbarews.addEventListener(\"close\", (ev) => {\n\t\t\t\tfakeEventSend(new CloseEvent(\"close\", ev));\n\t\t\t});\n\t\t\tbarews.addEventListener(\"message\", (ev) => {\n\t\t\t\tconst fakeev = new MessageEvent(\"message\", {\n\t\t\t\t\tdata: ev.data,\n\t\t\t\t\torigin: ev.origin,\n\t\t\t\t\tlastEventId: ev.lastEventId,\n\t\t\t\t\tsource: ev.source,\n\t\t\t\t\tports: ev.ports,\n\t\t\t\t});\n\n\t\t\t\tfakeEventSend(fakeev);\n\t\t\t});\n\t\t\tbarews.addEventListener(\"error\", (ev) => {\n\t\t\t\tfakeEventSend(new Event(\"error\"));\n\t\t\t});\n\n\t\t\tsocketmap.set(fakeWebSocket, state);\n\t\t\tctx.return(fakeWebSocket);\n\t\t},\n\t});\n\n\tclient.Proxy(\"EventTarget.prototype.addEventListener\", {\n\t\tapply(ctx) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\t\t\tif (!ws) return; // it's not a websocket ignore it\n\n\t\t\tconst [type, listener, opts] = ctx.args;\n\n\t\t\tif (\n\t\t\t\t(typeof opts === \"object\" && opts.capture) ||\n\t\t\t\t(typeof opts === \"boolean\" && opts)\n\t\t\t) {\n\t\t\t\tconst listeners = (ws.captureListeners[type] ??= []);\n\t\t\t\tlisteners.push(listener);\n\t\t\t\tws.captureListeners[type] = listeners;\n\t\t\t} else {\n\t\t\t\tconst listeners = (ws.listeners[type] ??= []);\n\t\t\t\tlisteners.push(listener);\n\t\t\t\tws.listeners[type] = listeners;\n\t\t\t}\n\n\t\t\tctx.return(undefined);\n\t\t},\n\t});\n\n\tclient.Proxy(\"EventTarget.prototype.removeEventListener\", {\n\t\tapply(ctx) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\t\t\tif (!ws) return;\n\n\t\t\tconst [type, listener, opts] = ctx.args;\n\n\t\t\tif (\n\t\t\t\t(typeof opts === \"object\" && opts.capture) ||\n\t\t\t\t(typeof opts === \"boolean\" && opts)\n\t\t\t) {\n\t\t\t\tconst listeners = (ws.captureListeners[type] ??= []);\n\t\t\t\tconst idx = listeners.indexOf(listener);\n\t\t\t\tif (idx !== -1) listeners.splice(idx, 1);\n\t\t\t\tws.captureListeners[type] = listeners;\n\t\t\t} else {\n\t\t\t\tconst listeners = (ws.listeners[type] ??= []);\n\t\t\t\tconst idx = listeners.indexOf(listener);\n\t\t\t\tif (idx !== -1) listeners.splice(idx, 1);\n\t\t\t\tws.listeners[type] = listeners;\n\t\t\t}\n\n\t\t\tctx.return(undefined);\n\t\t},\n\t});\n\n\tclient.Trap(\"WebSocket.prototype.binaryType\", {\n\t\tget(ctx) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\n\t\t\treturn ws.binaryType;\n\t\t},\n\t\tset(ctx, v: string) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\t\t\tif (v === \"blob\" || v === \"arraybuffer\") ws.binaryType = v;\n\t\t},\n\t});\n\n\tclient.Trap(\"WebSocket.prototype.bufferedAmount\", {\n\t\tget() {\n\t\t\treturn 0;\n\t\t},\n\t});\n\n\tclient.Trap(\"WebSocket.prototype.extensions\", {\n\t\tget(ctx) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\n\t\t\treturn ws.extensions;\n\t\t},\n\t});\n\n\tclient.Trap(\"WebSocket.prototype.onclose\", {\n\t\tget(ctx) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\n\t\t\treturn ws.onclose;\n\t\t},\n\t\tset(ctx, v: (ev: CloseEvent) => any) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\t\t\tws.onclose = v;\n\t\t},\n\t});\n\n\tclient.Trap(\"WebSocket.prototype.onerror\", {\n\t\tget(ctx) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\n\t\t\treturn ws.onerror;\n\t\t},\n\t\tset(ctx, v: (ev: Event) => any) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\t\t\tws.onerror = v;\n\t\t},\n\t});\n\n\tclient.Trap(\"WebSocket.prototype.onmessage\", {\n\t\tget(ctx) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\n\t\t\treturn ws.onmessage;\n\t\t},\n\t\tset(ctx, v: (ev: MessageEvent) => any) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\t\t\tws.onmessage = v;\n\t\t},\n\t});\n\n\tclient.Trap(\"WebSocket.prototype.onopen\", {\n\t\tget(ctx) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\n\t\t\treturn ws.onopen;\n\t\t},\n\t\tset(ctx, v: (ev: Event) => any) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\t\t\tws.onopen = v;\n\t\t},\n\t});\n\n\tclient.Trap(\"WebSocket.prototype.url\", {\n\t\tget(ctx) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\n\t\t\treturn ws.url;\n\t\t},\n\t});\n\n\tclient.Trap(\"WebSocket.prototype.protocol\", {\n\t\tget(ctx) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\n\t\t\treturn ws.protocol;\n\t\t},\n\t});\n\n\tclient.Trap(\"WebSocket.prototype.readyState\", {\n\t\tget(ctx) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\n\t\t\treturn ws.barews.readyState;\n\t\t},\n\t});\n\n\tclient.Proxy(\"WebSocket.prototype.send\", {\n\t\tapply(ctx) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\n\t\t\tctx.return(ws.barews.send(ctx.args[0]));\n\t\t},\n\t});\n\n\tclient.Proxy(\"WebSocket.prototype.close\", {\n\t\tapply(ctx) {\n\t\t\tconst ws = socketmap.get(ctx.this);\n\t\t\tif (ctx.args[0] === undefined) ctx.args[0] = 1000;\n\t\t\tif (ctx.args[1] === undefined) ctx.args[1] = \"\";\n\t\t\tctx.return(ws.barews.close(ctx.args[0], ctx.args[1]));\n\t\t},\n\t});\n}\n","import { config, decodeUrl, encodeUrl, rewriteHeaders } from \"../../../shared\";\nimport { ScramjetClient } from \"../../client\";\nconst nativeworker = Worker;\nconst postmessage = Worker.prototype.postMessage;\nexport default function (client: ScramjetClient, self: Self) {\n\tconst worker = new nativeworker(config.sync);\n\tconst ARGS = Symbol(\"xhr original args\");\n\tconst HEADERS = Symbol(\"xhr headers\");\n\n\tclient.Proxy(\"XMLHttpRequest.prototype.open\", {\n\t\tapply(ctx) {\n\t\t\tif (ctx.args[1]) ctx.args[1] = encodeUrl(ctx.args[1], client.meta);\n\t\t\tctx.this[ARGS] = ctx.args;\n\t\t},\n\t});\n\n\tclient.Proxy(\"XMLHttpRequest.prototype.setRequestHeader\", {\n\t\tapply(ctx) {\n\t\t\tconst headers = ctx.this[HEADERS] || (ctx.this[HEADERS] = {});\n\t\t\theaders[ctx.args[0]] = ctx.args[1];\n\t\t},\n\t});\n\n\tclient.Proxy(\"XMLHttpRequest.prototype.send\", {\n\t\tapply(ctx) {\n\t\t\tconst args = ctx.this[ARGS];\n\t\t\tif (!args || args[2]) return;\n\n\t\t\tif (!self.$scramjet.config.flags.syncxhr) {\n\t\t\t\tconsole.warn(\"sync xhr disabled in flags\");\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// it's a sync request\n\t\t\t// sync xhr to service worker is not supported\n\t\t\t// there's a nice way of polyfilling this though, we can spin on an atomic using sharedarraybuffer. this will maintain the sync behavior\n\n\t\t\t// @ts-expect-error maxbytelength not in types yet i guess\n\t\t\tconst sab = new SharedArrayBuffer(1024, { maxByteLength: 2147483647 });\n\t\t\tconst view = new DataView(sab);\n\n\t\t\tpostmessage.call(worker, {\n\t\t\t\tsab,\n\t\t\t\targs,\n\t\t\t\theaders: ctx.this[HEADERS],\n\t\t\t\tbody: ctx.args[0],\n\t\t\t});\n\n\t\t\tlet now = performance.now();\n\t\t\twhile (view.getUint8(0) === 0) {\n\t\t\t\tif (performance.now() - now > 1000) {\n\t\t\t\t\tthrow new Error(\"xhr timeout\");\n\t\t\t\t}\n\t\t\t\t/* spin */\n\t\t\t}\n\n\t\t\tconst status = view.getUint16(1);\n\t\t\tconst headersLength = view.getUint32(3);\n\n\t\t\tconst headersab = new Uint8Array(headersLength);\n\t\t\theadersab.set(new Uint8Array(sab.slice(7, 7 + headersLength)));\n\t\t\tconst headers = new TextDecoder().decode(headersab);\n\n\t\t\tconst bodyLength = view.getUint32(7 + headersLength);\n\t\t\tconst bodyab = new Uint8Array(bodyLength);\n\t\t\tbodyab.set(\n\t\t\t\tnew Uint8Array(\n\t\t\t\t\tsab.slice(11 + headersLength, 11 + headersLength + bodyLength)\n\t\t\t\t)\n\t\t\t);\n\t\t\tconst body = new TextDecoder().decode(bodyab);\n\n\t\t\t// these should be using proxies to not leak scram strings but who cares\n\t\t\tclient.RawTrap(ctx.this, \"status\", {\n\t\t\t\tget() {\n\t\t\t\t\treturn status;\n\t\t\t\t},\n\t\t\t});\n\t\t\tclient.RawTrap(ctx.this, \"responseText\", {\n\t\t\t\tget() {\n\t\t\t\t\treturn body;\n\t\t\t\t},\n\t\t\t});\n\t\t\tclient.RawTrap(ctx.this, \"response\", {\n\t\t\t\tget() {\n\t\t\t\t\tif (ctx.this.responseType === \"arraybuffer\") return bodyab.buffer;\n\t\t\t\t\treturn body;\n\t\t\t\t},\n\t\t\t});\n\t\t\tclient.RawTrap(ctx.this, \"responseXML\", {\n\t\t\t\tget() {\n\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\treturn parser.parseFromString(body, \"text/xml\");\n\t\t\t\t},\n\t\t\t});\n\t\t\tclient.RawTrap(ctx.this, \"getAllResponseHeaders\", {\n\t\t\t\tget() {\n\t\t\t\t\treturn () => headers;\n\t\t\t\t},\n\t\t\t});\n\t\t\tclient.RawTrap(ctx.this, \"getResponseHeader\", {\n\t\t\t\tget() {\n\t\t\t\t\treturn (header: string) => {\n\t\t\t\t\t\tconst re = new RegExp(`^${header}: (.*)$`, \"m\");\n\t\t\t\t\t\tconst match = re.exec(headers);\n\t\t\t\t\t\treturn match ? match[1] : null;\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t});\n\n\t\t\t// send has no return value right\n\t\t\tctx.return(undefined);\n\t\t},\n\t});\n\n\tclient.Trap(\"XMLHttpRequest.prototype.responseURL\", {\n\t\tget(ctx) {\n\t\t\treturn decodeUrl(ctx.get() as string);\n\t\t},\n\t});\n}\n","import { ScramjetClient } from \"../client\";\n\ntype Mapping = [string, number, number];\n\nconst sourcemaps: Record<string, Mapping[]> = {};\n\nexport const enabled = () => self.$scramjet.config.flags.sourcemaps;\n\nexport default function (client: ScramjetClient, self: Self) {\n\t// every script will push a sourcemap\n\tObject.defineProperty(self, \"$scramjet$pushsourcemap\", {\n\t\tvalue: (maps: Mapping[], tag: string) => {\n\t\t\tsourcemaps[tag] = maps;\n\t\t},\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tconfigurable: false,\n\t});\n\n\tconst scramtag_ident = \"/*scramtag \";\n\n\t// when we rewrite javascript it will make function.toString leak internals\n\t// this can lead to double rewrites which is bad\n\tclient.Proxy(\"Function.prototype.toString\", {\n\t\tapply(ctx) {\n\t\t\tlet stringified: string = ctx.fn.call(ctx.this);\n\t\t\tlet newString = \"\";\n\n\t\t\t// every function rewritten will have a scramtag comment\n\t\t\t// it will look like this:\n\t\t\t// function name() /*scramtag [index] [tag] */ { ... }\n\t\t\tconst scramtagstart = stringified.indexOf(\"/*s\");\n\n\t\t\tif (scramtagstart === -1) return ctx.return(stringified); // it's either a native function or something stolen from scramjet itself\n\n\t\t\tconst firstspace = stringified.indexOf(\n\t\t\t\t\" \",\n\t\t\t\tscramtagstart + scramtag_ident.length\n\t\t\t);\n\t\t\t// [index] holds the index of the first character in the scramtag (/)\n\t\t\tconst abstagindex = parseInt(\n\t\t\t\tstringified.substring(scramtagstart + scramtag_ident.length, firstspace)\n\t\t\t);\n\n\t\t\t// subtracting that from the index of the scramtag gives us the starting index of the function relative to the entire file\n\t\t\tconst absindex = abstagindex - scramtagstart;\n\n\t\t\tconst scramtagend = stringified.indexOf(\"*/\", scramtagstart);\n\t\t\tconst tag = stringified.substring(firstspace + 1, scramtagend);\n\n\t\t\t// delete all scramtags inside the function (and nested ones!!)\n\t\t\tstringified = stringified.replace(/\\/\\*scramtag.*?\\*\\//g, \"\");\n\n\t\t\tconst maps = sourcemaps[tag];\n\n\t\t\tlet i = 0;\n\t\t\tlet offset = 0;\n\n\t\t\tlet j = 0;\n\t\t\twhile (j < maps.length) {\n\t\t\t\tconst [str, start, end] = maps[j];\n\t\t\t\tif (start < absindex) {\n\t\t\t\t\tj++;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (start - absindex + offset > stringified.length) break;\n\n\t\t\t\t// ooh i should really document this before i forget how it works\n\t\t\t\tnewString += stringified.slice(i, start - absindex + offset);\n\t\t\t\tnewString += str;\n\t\t\t\toffset += end - start - str.length;\n\t\t\t\ti = start - absindex + offset + str.length;\n\n\t\t\t\tj++;\n\t\t\t}\n\n\t\t\tnewString += stringified.slice(i);\n\n\t\t\treturn ctx.return(newString);\n\t\t},\n\t});\n}\n","import { iswindow } from \"..\";\nimport { ProxyCtx, ScramjetClient } from \"../client\";\n\n// we don't want to end up overriding a property on window that's derived from a prototype until we've proxied the prototype\nexport const order = 3;\n\nexport default function (client: ScramjetClient, self: typeof window) {\n\t// an automated approach to cleaning the documentProxy from dom functions\n\t// it will trigger an illegal invocation if you pass the proxy to c++ code, we gotta hotswap it out with the real one\n\t// admittedly this is pretty slow. worth investigating if there's ways to get back some of the lost performance\n\n\tfor (const target of [self]) {\n\t\tfor (const prop in target) {\n\t\t\ttry {\n\t\t\t\tif (typeof target[prop] === \"function\") {\n\t\t\t\t\tclient.RawProxy(target, prop, {\n\t\t\t\t\t\tapply(ctx) {\n\t\t\t\t\t\t\tunproxy(ctx, client);\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t}\n\n\tif (!iswindow) return;\n\n\tfor (const target of [\n\t\tself.Node.prototype,\n\t\tself.MutationObserver.prototype,\n\t\tself.document,\n\t]) {\n\t\tfor (const prop in target) {\n\t\t\ttry {\n\t\t\t\tif (typeof target[prop] === \"function\") {\n\t\t\t\t\tclient.RawProxy(target, prop, {\n\t\t\t\t\t\tapply(ctx) {\n\t\t\t\t\t\t\tunproxy(ctx, client);\n\t\t\t\t\t\t},\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t}\n\n\tclient.Proxy(\"Object.getOwnPropertyDescriptor\", {\n\t\tapply(ctx) {\n\t\t\tconst desc = ctx.call();\n\n\t\t\tif (!desc) return;\n\n\t\t\tif (desc.get) {\n\t\t\t\tclient.RawProxy(desc, \"get\", {\n\t\t\t\t\tapply(ctx) {\n\t\t\t\t\t\t// value of this in the getter needs to be corrected\n\t\t\t\t\t\tunproxy(ctx, client);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (desc.set) {\n\t\t\t\tclient.RawProxy(desc, \"set\", {\n\t\t\t\t\tapply(ctx) {\n\t\t\t\t\t\tunproxy(ctx, client);\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// i don't think we have to care about value but it's worth looking into\n\n\t\t\tctx.return(desc);\n\t\t},\n\t});\n}\n\nexport function unproxy(ctx: ProxyCtx, client: ScramjetClient) {\n\tconst self = client.global;\n\tif (ctx.this === client.globalProxy) ctx.this = self;\n\tif (ctx.this === client.documentProxy) ctx.this = self.document;\n\n\tfor (const i in ctx.args) {\n\t\tif (ctx.args[i] === client.documentProxy) ctx.args[i] = self.document;\n\t\tif (ctx.args[i] === client.globalProxy) ctx.args[i] = self;\n\t}\n}\n","import { BareMuxConnection } from \"../../shared\";\nimport { encodeUrl } from \"../../shared/rewriters/url\";\nimport type { MessageC2W } from \"../../worker\";\nimport { ScramjetClient } from \"../client\";\n\nconst workerpostmessage = Worker.prototype.postMessage;\n\nexport default function (client: ScramjetClient, self: typeof globalThis) {\n\tclient.Proxy(\"Worker\", {\n\t\tconstruct({ args, call }) {\n\t\t\tif (args[0] instanceof URL) args[0] = args[0].href;\n\t\t\tif (args[0].startsWith(\"blob:\") || args[0].startsWith(\"data:\")) {\n\t\t\t\tconst data = syncfetch(client, args[0]);\n\t\t\t\tconst id = Math.random().toString(8).slice(5);\n\n\t\t\t\targs[0] = \"/scramjet/worker?id=\" + id;\n\t\t\t\tif (args[1] && args[1].type === \"module\") {\n\t\t\t\t\targs[0] += \"&type=module\";\n\t\t\t\t}\n\n\t\t\t\targs[0] += \"&origin=\" + encodeURIComponent(client.url.origin);\n\n\t\t\t\tclient.serviceWorker.controller?.postMessage({\n\t\t\t\t\tscramjet$type: \"dataworker\",\n\t\t\t\t\tdata,\n\t\t\t\t\tid,\n\t\t\t\t} as MessageC2W);\n\t\t\t} else {\n\t\t\t\targs[0] = encodeUrl(args[0], client.meta) + \"?dest=worker\";\n\n\t\t\t\tif (args[1] && args[1].type === \"module\") {\n\t\t\t\t\targs[0] += \"&type=module\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst worker = call();\n\t\t\tconst conn = new BareMuxConnection();\n\n\t\t\t(async () => {\n\t\t\t\tconst port = await conn.getInnerPort();\n\t\t\t\tworkerpostmessage.call(\n\t\t\t\t\tworker,\n\t\t\t\t\t{\n\t\t\t\t\t\t$scramjet$type: \"baremuxinit\",\n\t\t\t\t\t\tport,\n\t\t\t\t\t},\n\t\t\t\t\t[port]\n\t\t\t\t);\n\t\t\t})();\n\t\t},\n\t});\n\n\tclient.Proxy(\"Worklet.prototype.addModule\", {\n\t\tapply(ctx) {\n\t\t\tif (ctx.args[0]) ctx.args[0] = encodeUrl(ctx.args[0], client.meta);\n\t\t},\n\t});\n\n\tclient.Proxy(\"SharedWorker\", {\n\t\tconstruct({ args, call }) {\n\t\t\tif (args[0] instanceof URL) args[0] = args[0].href;\n\t\t\tif (args[0].startsWith(\"blob:\") || args[0].startsWith(\"data:\")) {\n\t\t\t\tconst data = syncfetch(client, args[0]);\n\t\t\t\tconst id = Math.random().toString(8).slice(5);\n\n\t\t\t\targs[0] = \"/scramjet/worker?id=\" + id;\n\t\t\t\tif (args[1] && args[1].type === \"module\") {\n\t\t\t\t\targs[0] += \"&type=module\";\n\t\t\t\t}\n\n\t\t\t\targs[0] += \"&origin=\" + encodeURIComponent(client.url.origin);\n\n\t\t\t\tclient.serviceWorker.controller?.postMessage({\n\t\t\t\t\tscramjet$type: \"dataworker\",\n\t\t\t\t\tdata,\n\t\t\t\t\tid,\n\t\t\t\t} as MessageC2W);\n\t\t\t} else {\n\t\t\t\targs[0] = encodeUrl(args[0], client.meta) + \"?dest=worker\";\n\n\t\t\t\tif (args[1] && args[1].type === \"module\") {\n\t\t\t\t\targs[0] += \"&type=module\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst worker = call();\n\t\t\tconst conn = new BareMuxConnection();\n\n\t\t\t(async () => {\n\t\t\t\tconst port = await conn.getInnerPort();\n\t\t\t\tworkerpostmessage.call(\n\t\t\t\t\tworker,\n\t\t\t\t\t{\n\t\t\t\t\t\t$scramjet$type: \"baremuxinit\",\n\t\t\t\t\t\tport,\n\t\t\t\t\t},\n\t\t\t\t\t[port]\n\t\t\t\t);\n\t\t\t})();\n\t\t},\n\t});\n}\n\nfunction syncfetch(client: ScramjetClient, url: string) {\n\tconst xhr = new XMLHttpRequest();\n\n\tconst realOpen = client.natives[\"XMLHttpRequest.prototype.open\"].bind(xhr);\n\n\trealOpen(\"GET\", url, false);\n\txhr.send();\n\n\treturn xhr.responseText;\n}\n","import { iswindow, isworker } from \"..\";\nimport { SCRAMJETCLIENT } from \"../../symbols\";\nimport { ScramjetClient } from \"../client\";\nimport { config } from \"../../shared\";\nimport { argdbg } from \"./err\";\n\nexport function createWrapFn(client: ScramjetClient, self: typeof globalThis) {\n\treturn function (identifier: any, args: any) {\n\t\tif (args && typeof args === \"object\" && args.length === 0)\n\t\t\tfor (const arg of args) {\n\t\t\t\t// argdbg(arg);\n\t\t\t}\n\t\tif (iswindow && identifier instanceof self.Window) {\n\t\t\treturn client.globalProxy;\n\t\t} else if (iswindow && identifier instanceof self.parent.self.Window) {\n\t\t\tif (SCRAMJETCLIENT in self.parent.self) {\n\t\t\t\t// ... then we're in a subframe, and the parent frame is also in a proxy context, so we should return its proxy\n\t\t\t\treturn self.parent.self[SCRAMJETCLIENT].globalProxy;\n\t\t\t} else {\n\t\t\t\t// ... then we should pretend we aren't nested and return the current window\n\t\t\t\treturn client.globalProxy;\n\t\t\t}\n\t\t} else if (iswindow && identifier instanceof self.top.self.Window) {\n\t\t\t// instead of returning top, we need to return the uppermost parent that's inside a scramjet context\n\t\t\tlet current = self.self;\n\n\t\t\tfor (;;) {\n\t\t\t\tconst test = current.parent.self;\n\t\t\t\tif (test === current) break; // there is no parent, actual or emulated.\n\n\t\t\t\t// ... then `test` represents a window outside of the proxy context, and therefore `current` is the topmost window in the proxy context\n\t\t\t\tif (!(SCRAMJETCLIENT in test)) break;\n\n\t\t\t\t// test is also insde a proxy, so we should continue up the chain\n\t\t\t\tcurrent = test;\n\t\t\t}\n\n\t\t\treturn current[SCRAMJETCLIENT].globalProxy.window;\n\t\t} else if (\n\t\t\t(iswindow && identifier instanceof self.Location) ||\n\t\t\t(isworker && identifier instanceof self.WorkerLocation)\n\t\t) {\n\t\t\treturn client.locationProxy;\n\t\t} else if (iswindow && identifier instanceof self.Document) {\n\t\t\treturn client.documentProxy;\n\t\t} else if (isworker && identifier instanceof self.WorkerGlobalScope) {\n\t\t\treturn client.globalProxy;\n\t\t}\n\n\t\treturn identifier;\n\t};\n}\n\nexport default function (client: ScramjetClient, self: typeof globalThis) {\n\t// the main magic of the proxy. all attempts to access any \"banned objects\" will be redirected here, and instead served a proxy object\n\t// this contrasts from how other proxies will leave the root object alone and instead attempt to catch every member access\n\t// this presents some issues (see element.ts), but makes us a good bit faster at runtime!\n\tObject.defineProperty(self, config.wrapfn, {\n\t\tvalue: client.wrapfn,\n\t\twritable: false,\n\t\tconfigurable: false,\n\t});\n\n\t// location = \"...\" can't be rewritten as wrapfn(location) = ..., so instead it will actually be rewritten as\n\t// ((t)=>$scramjet$tryset(location,\"+=\",t)||location+=t)(...);\n\t// it has to be a discrete function because there's always the possibility that \"location\" is a local variable\n\t// we have to use an IIFE to avoid duplicating side-effects in the getter\n\tObject.defineProperty(self, config.trysetfn, {\n\t\tvalue: function (lhs: any, op: string, rhs: any) {\n\t\t\tif (lhs instanceof Location) {\n\t\t\t\t// @ts-ignore\n\t\t\t\tlocationProxy.href = rhs;\n\n\t\t\t\treturn true;\n\t\t\t}\n\t\t},\n\t\twritable: false,\n\t\tconfigurable: false,\n\t});\n}\n","import { ScramjetClient } from \"./client\";\nimport { decodeUrl } from \"../shared\";\n\nexport class ScramjetServiceWorkerRuntime {\n\trecvport: MessagePort;\n\tconstructor(public client: ScramjetClient) {\n\t\t// @ts-ignore\n\t\tself.onconnect = (cevent: MessageEvent) => {\n\t\t\tconst port = cevent.ports[0];\n\t\t\tdbg.log(\"sw\", \"connected\");\n\n\t\t\tport.addEventListener(\"message\", (event) => {\n\t\t\t\tconsole.log(\"sw\", event.data);\n\t\t\t\tif (\"scramjet$type\" in event.data) {\n\t\t\t\t\tif (event.data.scramjet$type === \"init\") {\n\t\t\t\t\t\tthis.recvport = event.data.scramjet$port;\n\t\t\t\t\t\tthis.recvport.postMessage({ scramjet$type: \"init\" });\n\t\t\t\t\t} else {\n\t\t\t\t\t\thandleMessage.call(this, client, event.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tport.start();\n\t\t};\n\t}\n\n\thook() {\n\t\tthis.client.global.registration = {\n\t\t\t// TODO IMPLEMENT SCOPES\n\t\t\tscope: this.client.url.href,\n\t\t\tactive: {\n\t\t\t\tscriptURL: this.client.url.href,\n\t\t\t\tstate: \"activated\",\n\t\t\t\tonstatechange: null,\n\t\t\t\tonerror: null,\n\n\t\t\t\tpostMessage: () => {},\n\t\t\t\taddEventListener: () => {},\n\t\t\t\tremoveEventListener: () => {},\n\t\t\t\tdispatchEvent: (_e: Event) => {},\n\t\t\t},\n\t\t\tshowNotification: async () => {},\n\t\t\tunregister: async () => true,\n\t\t\tupdate: async () => {},\n\t\t\tinstalling: null,\n\t\t\twaiting: null,\n\t\t};\n\n\t\t// @ts-ignore\n\t\tthis.client.global.ServiceWorkerGlobalScope = this.client.global;\n\t}\n}\n\nfunction handleMessage(\n\tthis: ScramjetServiceWorkerRuntime,\n\tclient: ScramjetClient,\n\tdata: MessageW2R\n) {\n\tconst port = this.recvport;\n\tconst type = data.scramjet$type;\n\tconst token = data.scramjet$token;\n\n\tif (type === \"fetch\") {\n\t\tdbg.log(\"ee\", data);\n\t\tconst fetchhandlers = client.eventcallbacks.get(self);\n\t\tif (!fetchhandlers) return;\n\n\t\tfor (const handler of fetchhandlers) {\n\t\t\tif (handler.event !== \"fetch\") continue;\n\n\t\t\tconst request = data.scramjet$request;\n\n\t\t\tconst Request = client.natives[\"Request\"];\n\t\t\tconst fakeRequest = new Request(decodeUrl(request.url), {\n\t\t\t\tbody: request.body,\n\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\tmethod: request.method,\n\t\t\t\tmode: \"same-origin\",\n\t\t\t});\n\n\t\t\tObject.defineProperty(fakeRequest, \"destination\", {\n\t\t\t\tvalue: request.destinitation,\n\t\t\t});\n\n\t\t\t// TODO: clean up, maybe put into a class\n\t\t\tconst fakeFetchEvent: any = new Event(\"fetch\");\n\t\t\tfakeFetchEvent.request = fakeRequest;\n\t\t\tlet responded = false;\n\t\t\tfakeFetchEvent.respondWith = (response: Response | Promise<Response>) => {\n\t\t\t\tresponded = true;\n\t\t\t\t(async () => {\n\t\t\t\t\tresponse = await response;\n\t\t\t\t\tconst message: MessageR2W = {\n\t\t\t\t\t\tscramjet$type: \"fetch\",\n\t\t\t\t\t\tscramjet$token: token,\n\t\t\t\t\t\tscramjet$response: {\n\t\t\t\t\t\t\tbody: response.body,\n\t\t\t\t\t\t\theaders: Array.from(response.headers.entries()),\n\t\t\t\t\t\t\tstatus: response.status,\n\t\t\t\t\t\t\tstatusText: response.statusText,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\n\t\t\t\t\tdbg.log(\"sw\", \"responding\", message);\n\t\t\t\t\tport.postMessage(message, [response.body]);\n\t\t\t\t})();\n\t\t\t};\n\n\t\t\tdbg.log(\"to fn\", fakeFetchEvent);\n\t\t\thandler.proxiedCallback(trustEvent(fakeFetchEvent));\n\t\t\tif (!responded) {\n\t\t\t\tconsole.log(\"sw\", \"no response\");\n\t\t\t\tport.postMessage({\n\t\t\t\t\tscramjet$type: \"fetch\",\n\t\t\t\t\tscramjet$token: token,\n\t\t\t\t\tscramjet$response: false,\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction trustEvent(event: Event): Event {\n\treturn new Proxy(event, {\n\t\tget(target, prop, reciever) {\n\t\t\tif (prop === \"isTrusted\") return true;\n\n\t\t\treturn Reflect.get(target, prop);\n\t\t},\n\t});\n}\n\nexport type TransferrableResponse = {\n\tbody: ReadableStream;\n\theaders: [string, string][];\n\tstatus: number;\n\tstatusText: string;\n};\n\nexport type TransferrableRequest = {\n\tbody: ReadableStream;\n\theaders: [string, string][];\n\tdestinitation: RequestDestination;\n\tmethod: Request[\"method\"];\n\tmode: Request[\"mode\"];\n\turl: string;\n};\n\ntype FetchResponseMessage = {\n\tscramjet$type: \"fetch\";\n\tscramjet$response: TransferrableResponse;\n};\n\ntype FetchRequestMessage = {\n\tscramjet$type: \"fetch\";\n\tscramjet$request: TransferrableRequest;\n};\n\n// r2w = runtime to (service) worker\n\ntype MessageTypeR2W = FetchResponseMessage;\ntype MessageTypeW2R = FetchRequestMessage;\n\ntype MessageCommon = {\n\tscramjet$type: string;\n\tscramjet$token: number;\n};\n\nexport type MessageR2W = MessageCommon & MessageTypeR2W;\nexport type MessageW2R = MessageCommon &\n\tMessageTypeW2R & { scramjet$port?: MessagePort };\n","import { encodeUrl } from \"../../shared\";\nimport { ScramjetClient } from \"../client\";\n\nexport default function (client: ScramjetClient, _self: Self) {\n\tclient.Proxy(\"importScripts\", {\n\t\tapply(ctx) {\n\t\t\tfor (const i in ctx.args) {\n\t\t\t\tctx.args[i] = encodeUrl(ctx.args[i], client.meta);\n\t\t\t}\n\t\t},\n\t});\n}\n","export default {\n\tfmt: function (severity: string, message: string, ...args: any[]) {\n\t\tconst old = Error.prepareStackTrace;\n\n\t\tError.prepareStackTrace = (_, stack) => {\n\t\t\tstack.shift(); // stack();\n\t\t\tstack.shift(); // fmt();\n\t\t\tstack.shift();\n\n\t\t\tlet fmt = \"\";\n\t\t\tfor (let i = 1; i < Math.min(2, stack.length); i++) {\n\t\t\t\tif (stack[i].getFunctionName()) {\n\t\t\t\t\t// const f = stack[i].getThis()?.constructor?.name;\n\t\t\t\t\t// if (f) fmt += `${f}.`\n\t\t\t\t\tfmt += `${stack[i].getFunctionName()} -> ` + fmt;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfmt += stack[0].getFunctionName();\n\n\t\t\treturn fmt;\n\t\t};\n\n\t\tconst fmt = (function stack() {\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (e) {\n\t\t\t\treturn e.stack;\n\t\t\t}\n\t\t})();\n\n\t\tError.prepareStackTrace = old;\n\n\t\tconst fn = console[severity] || console.log;\n\t\tconst bg = {\n\t\t\tlog: \"#000\",\n\t\t\twarn: \"#f80\",\n\t\t\terror: \"#f00\",\n\t\t\tdebug: \"transparent\",\n\t\t}[severity];\n\t\tconst fg = {\n\t\t\tlog: \"#fff\",\n\t\t\twarn: \"#fff\",\n\t\t\terror: \"#fff\",\n\t\t\tdebug: \"gray\",\n\t\t}[severity];\n\t\tconst padding = {\n\t\t\tlog: 2,\n\t\t\twarn: 4,\n\t\t\terror: 4,\n\t\t\tdebug: 0,\n\t\t}[severity];\n\n\t\tfn(\n\t\t\t`%c${fmt}%c ${message}`,\n\t\t\t`\nbackground-color: ${bg};\ncolor: ${fg};\npadding: ${padding}px;\nfont-weight: bold;\nfont-family: monospace;\nfont-size: 0.9em;\n`,\n\t\t\t`\n${severity === \"debug\" ? \"color: gray\" : \"\"}\n`,\n\t\t\t...args\n\t\t);\n\t},\n\tlog: function (message: string, ...args: any[]) {\n\t\tthis.fmt(\"log\", message, ...args);\n\t},\n\twarn: function (message: string, ...args: any[]) {\n\t\tthis.fmt(\"warn\", message, ...args);\n\t},\n\terror: function (message: string, ...args: any[]) {\n\t\tthis.fmt(\"error\", message, ...args);\n\t},\n\tdebug: function (message: string, ...args: any[]) {\n\t\tthis.fmt(\"debug\", message, ...args);\n\t},\n};\n","export const {\n\tutil: { BareClient, ScramjetHeaders, BareMuxConnection },\n\turl: { encodeUrl, decodeUrl },\n\trewrite: {\n\t\trewriteCss,\n\t\tunrewriteCss,\n\t\trewriteHtml,\n\t\tunrewriteHtml,\n\t\trewriteSrcset,\n\t\trewriteJs,\n\t\trewriteHeaders,\n\t\trewriteWorkers,\n\t\thtmlRules,\n\t},\n\tCookieStore,\n} = self.$scramjet.shared;\n\nexport const config = self.$scramjet.config;\n","import { URLMeta, decodeUrl } from \"./url\";\n\n// i am a cat. i like to be petted. i like to be fed. i like to be\nimport {\n\tinit,\n\tinitSync,\n\trewrite_js,\n\trewrite_js_from_arraybuffer,\n} from \"../../../rewriter/out/rewriter.js\";\n\ninitSync({\n\tmodule: new WebAssembly.Module(\n\t\tUint8Array.from(atob(self.WASM), (c) => c.charCodeAt(0))\n\t),\n});\n\ninit();\n\nError.stackTraceLimit = 50;\n\nexport function rewriteJs(js: string | ArrayBuffer, meta: URLMeta) {\n\tif (self.$scramjet.config.flags.naiiveRewriter) {\n\t\tconst text = typeof js === \"string\" ? js : new TextDecoder().decode(js);\n\n\t\treturn rewriteJsNaiive(text);\n\t}\n\n\tconst before = performance.now();\n\tif (typeof js === \"string\") {\n\t\tjs = new TextDecoder().decode(\n\t\t\trewrite_js(js, meta.base.href, self.$scramjet)\n\t\t);\n\t} else {\n\t\tjs = rewrite_js_from_arraybuffer(\n\t\t\tnew Uint8Array(js),\n\t\t\tmeta.base.href,\n\t\t\tself.$scramjet\n\t\t);\n\t}\n\tconst after = performance.now();\n\n\t// dbg.debug(\"Rewrite took\", Math.floor((after - before) * 10) / 10, \"ms\");\n\n\treturn js;\n}\n\n// 1. does not work with modules\n// 2. cannot proxy import()\n// 3. disables \"use strict\" optimizations\n// 4. i think the global state can get clobbered somehow\n//\n// if you can ensure all the preconditions are met this is faster than full rewrites\nexport function rewriteJsNaiive(js: string | ArrayBuffer) {\n\tif (typeof js !== \"string\") {\n\t\tjs = new TextDecoder().decode(js);\n\t}\n\n\treturn `\n\t\twith (${self.$scramjet.config.wrapfn}(globalThis)) {\n\n\t\t\t${js}\n\n\t\t}\n\t`;\n}\n","import { rewriteJs } from \"./js\";\n\nexport type URLMeta = {\n\torigin: URL;\n\tbase: URL;\n};\n\nfunction tryCanParseURL(url: string, origin?: string | URL): URL | null {\n\ttry {\n\t\treturn new URL(url, origin);\n\t} catch {\n\t\treturn null;\n\t}\n}\n\n// something is broken with this but i didn't debug it\nexport function encodeUrl(url: string | URL, meta: URLMeta) {\n\tif (url instanceof URL) {\n\t\turl = url.href;\n\t}\n\n\t// if (!origin) {\n\t// \tif (location.pathname.startsWith(self.$scramjet.config.prefix + \"worker\")) {\n\t// \t\torigin = new URL(new URL(location.href).searchParams.get(\"origin\"));\n\t// \t} else\n\t// \t\torigin = new URL(\n\t// \t\t\tself.$scramjet.codec.decode(\n\t// \t\t\t\tlocation.href.slice(\n\t// \t\t\t\t\t(location.origin + self.$scramjet.config.prefix).length\n\t// \t\t\t\t)\n\t// \t\t\t)\n\t// \t\t);\n\t// }\n\n\tif (url.startsWith(\"javascript:\")) {\n\t\treturn \"javascript:\" + rewriteJs(url.slice(\"javascript:\".length), meta);\n\t} else if (/^(#|mailto|about|data|blob)/.test(url)) {\n\t\t// TODO this regex is jank but i'm not fixing it\n\t\treturn url;\n\t} else {\n\t\treturn (\n\t\t\tlocation.origin +\n\t\t\tself.$scramjet.config.prefix +\n\t\t\tself.$scramjet.codec.encode(new URL(url, meta.base).href)\n\t\t);\n\t}\n}\n\n// something is also broken with this but i didn't debug it\nexport function decodeUrl(url: string | URL) {\n\tif (url instanceof URL) {\n\t\turl = url.href;\n\t}\n\n\tif (\n\t\ttryCanParseURL(url)?.pathname.startsWith(\n\t\t\tself.$scramjet.config.prefix + \"worker\"\n\t\t)\n\t) {\n\t\treturn new URL(new URL(url).searchParams.get(\"origin\")).href;\n\t}\n\n\tif (/^(#|about|data|mailto|javascript)/.test(url)) {\n\t\treturn url;\n\t} else if (tryCanParseURL(url)) {\n\t\treturn self.$scramjet.codec.decode(\n\t\t\turl.slice((location.origin + self.$scramjet.config.prefix).length)\n\t\t);\n\t} else {\n\t\treturn url;\n\t}\n}\n","// see types.d.ts for what these mean\nexport const SCRAMJETCLIENT = Symbol.for(\"scramjet client global\");\nexport const SCRAMJETFRAME = Symbol.for(\"scramjet frame handle\");\n","let wasm;\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.buffer !== wasm.memory.buffer) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n};\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8ArrayMemory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8ArrayMemory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8ArrayMemory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer !== wasm.memory.buffer) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().slice(ptr, ptr + len));\n}\n\nlet heap_next = heap.length;\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n/**\n*/\nexport function init() {\n    wasm.init();\n}\n\nlet stack_pointer = 128;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return getUint8ArrayMemory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n* @param {string} js\n* @param {string} url\n* @param {object} scramjet\n* @returns {Uint8Array}\n*/\nexport function rewrite_js(js, url, scramjet) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passStringToWasm0(js, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        wasm.rewrite_js(retptr, ptr0, len0, ptr1, len1, addBorrowedObject(scramjet));\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var v3 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1, 1);\n        return v3;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        heap[stack_pointer++] = undefined;\n    }\n}\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1, 1) >>> 0;\n    getUint8ArrayMemory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n/**\n* @param {Uint8Array} js\n* @param {string} url\n* @param {object} scramjet\n* @returns {Uint8Array}\n*/\nexport function rewrite_js_from_arraybuffer(js, url, scramjet) {\n    try {\n        const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n        const ptr0 = passArray8ToWasm0(js, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ptr1 = passStringToWasm0(url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        wasm.rewrite_js_from_arraybuffer(retptr, ptr0, len0, ptr1, len1, addBorrowedObject(scramjet));\n        var r0 = getDataViewMemory0().getInt32(retptr + 4 * 0, true);\n        var r1 = getDataViewMemory0().getInt32(retptr + 4 * 1, true);\n        var v3 = getArrayU8FromWasm0(r0, r1).slice();\n        wasm.__wbindgen_free(r0, r1 * 1, 1);\n        return v3;\n    } finally {\n        wasm.__wbindgen_add_to_stack_pointer(16);\n        heap[stack_pointer++] = undefined;\n    }\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_boolean_get = function(arg0) {\n        const v = getObject(arg0);\n        const ret = typeof(v) === 'boolean' ? (v ? 1 : 0) : 2;\n        return ret;\n    };\n    imports.wbg.__wbg_new_abda76e883ba8a5f = function() {\n        const ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_658279fe44541cf6 = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getDataViewMemory0().setInt32(arg0 + 4 * 1, len1, true);\n        getDataViewMemory0().setInt32(arg0 + 4 * 0, ptr1, true);\n    };\n    imports.wbg.__wbg_error_f851667af71bcfc6 = function(arg0, arg1) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        const ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_crypto_1d1f22824a6a080c = function(arg0) {\n        const ret = getObject(arg0).crypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_process_4a72847cc503995b = function(arg0) {\n        const ret = getObject(arg0).process;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_versions_f686565e586dd935 = function(arg0) {\n        const ret = getObject(arg0).versions;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_node_104a2ff8d6ea03a2 = function(arg0) {\n        const ret = getObject(arg0).node;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_string = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'string';\n        return ret;\n    };\n    imports.wbg.__wbg_require_cca90b1a94a0255b = function() { return handleError(function () {\n        const ret = module.require;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_msCrypto_eb05e62b530a1508 = function(arg0) {\n        const ret = getObject(arg0).msCrypto;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithlength_e9b4878cebadb3d3 = function(arg0) {\n        const ret = new Uint8Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_get_e3c254076557e348 = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_self_ce0dbfc45cf2f5be = function() { return handleError(function () {\n        const ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_window_c6fb939a7f436783 = function() { return handleError(function () {\n        const ret = window.window;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_globalThis_d1e6af4856ba331b = function() { return handleError(function () {\n        const ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_global_207b558942527489 = function() { return handleError(function () {\n        const ret = global.global;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbg_newnoargs_e258087cd0daa0ea = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_27c0f87801dedf93 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_b3ca7c6051f9bec1 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_12d079cc21e14bdb = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_aa4a17c33a06e5cb = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_randomFillSync_5c9c955aa56b6049 = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).randomFillSync(takeObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_subarray_a1f73cd4b5b42fe1 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_getRandomValues_3aa56aa6edec874c = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).getRandomValues(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_new_63b92bc8671ed464 = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_a47bac70306a19a7 = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, memory) {\n    imports.wbg.memory = memory || new WebAssembly.Memory({initial:22,maximum:16384,shared:true});\n}\n\nfunction __wbg_finalize_init(instance, module, thread_stack_size) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedDataViewMemory0 = null;\n    cachedUint8ArrayMemory0 = null;\n\nif (typeof thread_stack_size !== 'undefined' && (typeof thread_stack_size !== 'number' || thread_stack_size === 0 || thread_stack_size % 65536 !== 0)) { throw 'invalid stack size' }\nwasm.__wbindgen_start(thread_stack_size);\nreturn wasm;\n}\n\nfunction initSync(module, memory) {\n    if (wasm !== undefined) return wasm;\n\n    let thread_stack_size\n    if (typeof module !== 'undefined' && Object.getPrototypeOf(module) === Object.prototype)\n    ({module, memory, thread_stack_size} = module)\n    else\n    console.warn('using deprecated parameters for `initSync()`; pass a single object instead')\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports, memory);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module, thread_stack_size);\n}\n\nasync function __wbg_init(module_or_path, memory) {\n    if (wasm !== undefined) return wasm;\n\n    let thread_stack_size\n    if (typeof module_or_path !== 'undefined' && Object.getPrototypeOf(module_or_path) === Object.prototype)\n    ({module_or_path, memory, thread_stack_size} = module_or_path)\n    else\n    console.warn('using deprecated parameters for the initialization function; pass a single object instead')\n\n    if (typeof module_or_path === 'undefined') {\n        module_or_path = new URL('rewriter_bg.wasm', \"\");\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof module_or_path === 'string' || (typeof Request === 'function' && module_or_path instanceof Request) || (typeof URL === 'function' && module_or_path instanceof URL)) {\n        module_or_path = fetch(module_or_path);\n    }\n\n    __wbg_init_memory(imports, memory);\n\n    const { instance, module } = await __wbg_load(await module_or_path, imports);\n\n    return __wbg_finalize_init(instance, module, thread_stack_size);\n}\n\nexport { initSync };\nexport default __wbg_init;\n"],"names":["iswindow","SCRAMJETCLIENT","SCRAMJETFRAME","createDocumentProxy","createGlobalProxy","getOwnPropertyDescriptorHandler","createLocationProxy","nativeGetOwnPropertyDescriptor","BareClient","CookieStore","config","decodeUrl","encodeUrl","createWrapFn","NavigateEvent","ScramjetClient","global","Map","Promise","resolve","addEventListener","data","client","base","url","frag","undefined","URL","frame","sframe","cookiestr","context","modules","key","module","self","a","b","aorder","border","ev","name","handler","Array","n","split","prop","target","original","Reflect","value","h","constructor","argArray","newTarget","returnValue","earlyreturn","ctx","r","fn","thisArg","pst","Error","err","s","location","Object","console","Proxy","descriptor","oldDescriptor","v","desc","newValue","rewriteCss","unrewriteCss","cssProperties","realProperty","htmlRules","unrewriteHtml","rewriteHtml","rewriteJs","rewriteSrcset","attrObject","urlinterfaces","originalhrefs","attrs","attr","element","urlprops","i","href","ruleList","rule","newval","atob","realwin","newclient","contentwindow","doc","scram","UrlChangeEvent","order","enabled","disabled","Navigator","registration","worker","SharedWorker","handle","fakeRegistration","ServiceWorkerRegistration","index","keys","realLocalStorage","f","property","attributes","realSessionStorage","localStorageProxy","sessionStorageProxy","Event","indirectEval","realDescriptor","d","ScramjetServiceWorkerRuntime","isworker","issw","isdedicated","isshared","isemulatedsw","dbg","runtime","document","Location","fakeLocation","descriptorSource","native","args","nativeFunction","argdbg","arg","recurse","Symbol","ar","scramerr","e","scramdbg","t","self1","error","stack","newstack","js","rewritten","indirection","unproxy","realOnEvent","handlers","wraplistener","listener","realEvent","type","_target","reciever","rv","origlistener","proxylistener","arr","targets","rewriteFunction","stringifiedFunction","content","Function","resolved","POLLUTANT","pollutant","callerGlobalThisProxied","callerClient","wrappedPostMessage","toproxy","pollution","socketmap","WeakMap","fakeWebSocket","EventTarget","trustEvent","barews","state","fakeEventSend","fakeev","CloseEvent","MessageEvent","ws","opts","listeners","idx","nativeworker","Worker","postmessage","ARGS","HEADERS","headers","sab","SharedArrayBuffer","view","DataView","now","performance","status","headersLength","headersab","Uint8Array","TextDecoder","bodyLength","bodyab","body","parser","DOMParser","header","re","RegExp","match","sourcemaps","maps","tag","scramtag_ident","stringified","newString","scramtagstart","firstspace","abstagindex","parseInt","absindex","scramtagend","offset","j","str","start","end","BareMuxConnection","workerpostmessage","call","syncfetch","id","Math","encodeURIComponent","conn","port","xhr","XMLHttpRequest","realOpen","identifier","current","test","lhs","op","rhs","locationProxy","cevent","event","handleMessage","_e","token","fetchhandlers","request","Request","fakeRequest","Headers","fakeFetchEvent","responded","response","message","_self","severity","old","_","fmt","bg","fg","padding","ScramjetHeaders","rewriteHeaders","rewriteWorkers","init","initSync","rewrite_js","rewrite_js_from_arraybuffer","WebAssembly","c","meta","text","rewriteJsNaiive","before","after","tryCanParseURL","origin"],"mappings":"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B,YAAY;AACZ;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,cAAc;AACd;AACA;;AAEA,kBAAkB;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAM;AACN;;AAEA;AACA,qBAAqB;;AAErB,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D;AAC9D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,KAAK;AACL,2DAA2D;AAC3D;AACA;AACA,KAAK;AACL,6DAA6D;AAC7D;AACA;AACA,KAAK;AACL,iEAAiE;AACjE;AACA;AACA,KAAK;AACL,6DAA6D;AAC7D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;AAC3D;AACA;AACA,KAAK;AACL,2DAA2D;AAC3D;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,sEAAsE;AACtE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,2DAA2D,qCAAqC;AAChG;;AAEA;AACA;AACA;AACA;AACA;;AAEA,yJAAyJ;AACzJ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM,mCAAmC;AACzC;AACA,gEAAgE;;AAEhE;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM,2CAA2C;AACjD;AACA,+EAA+E;;AAE/E;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,YAAY,mBAAmB;;AAE/B;AACA;;AAEoB;AACpB,iEAAe,UAAU,EAAC"}