{"version":3,"file":"scramjet.codecs.js","sources":["webpack://@mercuryworkshop/scramjet/./src/codecs/index.ts"],"sourcesContent":["// for some reason eslint was parsing the type inside of the function params as a variable\nexport interface Codec {\n\t// eslint-disable-next-line\n\tencode: (str: string | undefined) => string;\n\t// eslint-disable-next-line\n\tdecode: (str: string | undefined) => string;\n}\n\nconst none = {\n\tencode: (str: string | undefined) => str,\n\tdecode: (str: string | undefined) => str,\n};\n\nconst plain = {\n\tencode: (str: string | undefined) => {\n\t\tif (!str) return str;\n\n\t\treturn encodeURIComponent(str);\n\t},\n\tdecode: (str: string | undefined) => {\n\t\tif (!str) return str;\n\n\t\treturn decodeURIComponent(str);\n\t},\n};\n\nconst xor = {\n\tencode: (str: string | undefined, key: number = 2) => {\n\t\tif (!str) return str;\n\n\t\tlet result = \"\";\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tresult += i % key ? String.fromCharCode(str.charCodeAt(i) ^ key) : str[i];\n\t\t}\n\n\t\treturn encodeURIComponent(result);\n\t},\n\tdecode: (str: string | undefined, key: number = 2) => {\n\t\tif (!str) return str;\n\n\t\tconst [input, ...search] = str.split(\"?\");\n\t\tlet result = \"\";\n\t\tconst decoded = decodeURIComponent(input);\n\t\tfor (let i = 0; i < decoded.length; i++) {\n\t\t\tresult +=\n\t\t\t\ti % key ? String.fromCharCode(decoded.charCodeAt(i) ^ key) : decoded[i];\n\t\t}\n\n\t\treturn result + (search.length ? \"?\" + search.join(\"?\") : \"\");\n\t},\n};\n\nconst base64 = {\n\tencode: (str: string | undefined) => {\n\t\tif (!str) return str;\n\n\t\treturn decodeURIComponent(btoa(str));\n\t},\n\tdecode: (str: string | undefined) => {\n\t\tif (!str) return str;\n\n\t\treturn atob(str);\n\t},\n};\n\nif (typeof self.$scramjet === \"undefined\") {\n\t//@ts-expect-error really dumb workaround\n\tself.$scramjet = {};\n}\nself.$scramjet.codecs = {\n\tnone,\n\tplain,\n\txor,\n\tbase64,\n};\n\nif (\"document\" in self && document.currentScript) {\n\tdocument.currentScript.remove();\n}\n"],"names":["none","str","plain","encodeURIComponent","decodeURIComponent","xor","key","result","i","String","input","search","decoded","base64","btoa","atob","self","document"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,0FAA0F;AAQ1F,MAAMA,OAAO;IACZ,QAAQ,CAACC,MAA4BA;IACrC,QAAQ,CAACA,MAA4BA;AACtC;AAEA,MAAMC,QAAQ;IACb,QAAQ,CAACD;QACR,IAAI,CAACA,KAAK,OAAOA;QAEjB,OAAOE,mBAAmBF;IAC3B;IACA,QAAQ,CAACA;QACR,IAAI,CAACA,KAAK,OAAOA;QAEjB,OAAOG,mBAAmBH;IAC3B;AACD;AAEA,MAAMI,MAAM;IACX,QAAQ,CAACJ,KAAyBK,MAAc,CAAC;QAChD,IAAI,CAACL,KAAK,OAAOA;QAEjB,IAAIM,SAAS;QACb,IAAK,IAAIC,IAAI,GAAGA,IAAIP,IAAI,MAAM,EAAEO,IAAK;YACpCD,UAAUC,IAAIF,MAAMG,OAAO,YAAY,CAACR,IAAI,UAAU,CAACO,KAAKF,OAAOL,GAAG,CAACO,EAAE;QAC1E;QAEA,OAAOL,mBAAmBI;IAC3B;IACA,QAAQ,CAACN,KAAyBK,MAAc,CAAC;QAChD,IAAI,CAACL,KAAK,OAAOA;QAEjB,MAAM,CAACS,OAAO,GAAGC,OAAO,GAAGV,IAAI,KAAK,CAAC;QACrC,IAAIM,SAAS;QACb,MAAMK,UAAUR,mBAAmBM;QACnC,IAAK,IAAIF,IAAI,GAAGA,IAAII,QAAQ,MAAM,EAAEJ,IAAK;YACxCD,UACCC,IAAIF,MAAMG,OAAO,YAAY,CAACG,QAAQ,UAAU,CAACJ,KAAKF,OAAOM,OAAO,CAACJ,EAAE;QACzE;QAEA,OAAOD,SAAUI,CAAAA,OAAO,MAAM,GAAG,MAAMA,OAAO,IAAI,CAAC,OAAO,EAAC;IAC5D;AACD;AAEA,MAAME,SAAS;IACd,QAAQ,CAACZ;QACR,IAAI,CAACA,KAAK,OAAOA;QAEjB,OAAOG,mBAAmBU,KAAKb;IAChC;IACA,QAAQ,CAACA;QACR,IAAI,CAACA,KAAK,OAAOA;QAEjB,OAAOc,KAAKd;IACb;AACD;AAEA,IAAI,OAAOe,KAAK,SAAS,KAAK,aAAa;IAC1C,yCAAyC;IACzCA,KAAK,SAAS,GAAG,CAAC;AACnB;AACAA,KAAK,SAAS,CAAC,MAAM,GAAG;IACvBhB;IACAE;IACAG;IACAQ;AACD;AAEA,IAAI,cAAcG,QAAQC,SAAS,aAAa,EAAE;IACjDA,SAAS,aAAa,CAAC,MAAM;AAC9B;AAxEC"}